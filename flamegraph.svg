<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="742" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="725.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="725.00"> </text><svg id="frames" x="10" width="1180" total_samples="10516"><g><title>`0x7FFC8CA4ECB8 (3 samples, 0.03%)</title><rect x="0.0190%" y="597" width="0.0285%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="3"/><text x="0.2690%" y="607.50"></text></g><g><title>`0x7FFC8CA4F766 (2 samples, 0.02%)</title><rect x="0.0475%" y="581" width="0.0190%" height="15" fill="rgb(217,0,24)" fg:x="5" fg:w="2"/><text x="0.2975%" y="591.50"></text></g><g><title>`0x7FFC8CA4F0A6 (2 samples, 0.02%)</title><rect x="0.0475%" y="565" width="0.0190%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="2"/><text x="0.2975%" y="575.50"></text></g><g><title>`0x7FFC8CA431FA (6 samples, 0.06%)</title><rect x="0.0190%" y="645" width="0.0571%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="6"/><text x="0.2690%" y="655.50"></text></g><g><title>`0x7FFC8CA522B0 (6 samples, 0.06%)</title><rect x="0.0190%" y="629" width="0.0571%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="6"/><text x="0.2690%" y="639.50"></text></g><g><title>`0x7FFC8CA4EC63 (6 samples, 0.06%)</title><rect x="0.0190%" y="613" width="0.0571%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="6"/><text x="0.2690%" y="623.50"></text></g><g><title>`0x7FFC8CA4ECF0 (3 samples, 0.03%)</title><rect x="0.0475%" y="597" width="0.0285%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="3"/><text x="0.2975%" y="607.50"></text></g><g><title>`0x7FFC8A1D05A2 (2 samples, 0.02%)</title><rect x="0.0761%" y="613" width="0.0190%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="2"/><text x="0.3261%" y="623.50"></text></g><g><title>`0x7FFC8A1D19C7 (2 samples, 0.02%)</title><rect x="0.0761%" y="597" width="0.0190%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="2"/><text x="0.3261%" y="607.50"></text></g><g><title>`0x7FFC8A1CC050 (2 samples, 0.02%)</title><rect x="0.0761%" y="581" width="0.0190%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="2"/><text x="0.3261%" y="591.50"></text></g><g><title>`0x7FFC8A6756B2 (2 samples, 0.02%)</title><rect x="0.0761%" y="565" width="0.0190%" height="15" fill="rgb(250,228,42)" fg:x="8" fg:w="2"/><text x="0.3261%" y="575.50"></text></g><g><title>`0x7FFC8CA06AF4 (2 samples, 0.02%)</title><rect x="0.0761%" y="549" width="0.0190%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="2"/><text x="0.3261%" y="559.50"></text></g><g><title>`0x7FFC8CA073E4 (2 samples, 0.02%)</title><rect x="0.0761%" y="533" width="0.0190%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="2"/><text x="0.3261%" y="543.50"></text></g><g><title>`0x7FFC8CA0FB53 (2 samples, 0.02%)</title><rect x="0.0761%" y="517" width="0.0190%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="2"/><text x="0.3261%" y="527.50"></text></g><g><title>`0x7FFC8CA4ED9F (2 samples, 0.02%)</title><rect x="0.0761%" y="501" width="0.0190%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="2"/><text x="0.3261%" y="511.50"></text></g><g><title>`0x7FFC8A1D045F (3 samples, 0.03%)</title><rect x="0.0761%" y="629" width="0.0285%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="3"/><text x="0.3261%" y="639.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::pop (3 samples, 0.03%)</title><rect x="1.5215%" y="405" width="0.0285%" height="15" fill="rgb(225,20,46)" fg:x="160" fg:w="3"/><text x="1.7715%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::as_ptr (2 samples, 0.02%)</title><rect x="1.5310%" y="389" width="0.0190%" height="15" fill="rgb(210,31,41)" fg:x="161" fg:w="2"/><text x="1.7810%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::mem::maybe_uninit::MaybeUninit&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::assume_init(core::mem::maybe_uninit::MaybeUninit (2 samples, 0.02%)</title><rect x="1.5310%" y="373" width="0.0190%" height="15" fill="rgb(221,200,47)" fg:x="161" fg:w="2"/><text x="1.7810%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::BinaryHeap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::is_empty (2 samples, 0.02%)</title><rect x="1.6356%" y="373" width="0.0190%" height="15" fill="rgb(226,26,5)" fg:x="172" fg:w="2"/><text x="1.8856%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::heuristic (29 samples, 0.28%)</title><rect x="2.5105%" y="277" width="0.2758%" height="15" fill="rgb(249,33,26)" fg:x="264" fg:w="29"/><text x="2.7605%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$19::eq (12 samples, 0.11%)</title><rect x="2.6721%" y="261" width="0.1141%" height="15" fill="rgb(235,183,28)" fg:x="281" fg:w="12"/><text x="2.9221%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::PartialOrd::le (52 samples, 0.49%)</title><rect x="2.4439%" y="325" width="0.4945%" height="15" fill="rgb(221,5,38)" fg:x="257" fg:w="52"/><text x="2.6939%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$6::partial_cmp (52 samples, 0.49%)</title><rect x="2.4439%" y="309" width="0.4945%" height="15" fill="rgb(247,18,42)" fg:x="257" fg:w="52"/><text x="2.6939%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$5::cmp (52 samples, 0.49%)</title><rect x="2.4439%" y="293" width="0.4945%" height="15" fill="rgb(241,131,45)" fg:x="257" fg:w="52"/><text x="2.6939%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::impls::impl$55::cmp (16 samples, 0.15%)</title><rect x="2.7862%" y="277" width="0.1521%" height="15" fill="rgb(249,31,29)" fg:x="293" fg:w="16"/><text x="3.0362%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::heuristic (12 samples, 0.11%)</title><rect x="2.8243%" y="261" width="0.1141%" height="15" fill="rgb(225,111,53)" fg:x="297" fg:w="12"/><text x="3.0743%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$19::eq (7 samples, 0.07%)</title><rect x="2.8718%" y="245" width="0.0666%" height="15" fill="rgb(238,160,17)" fg:x="302" fg:w="7"/><text x="3.1218%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::Hole&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::get (56 samples, 0.53%)</title><rect x="2.4439%" y="341" width="0.5325%" height="15" fill="rgb(214,148,48)" fg:x="257" fg:w="56"/><text x="2.6939%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::impl$0::get_unchecked(ref$&lt;slice2$ (4 samples, 0.04%)</title><rect x="2.9384%" y="325" width="0.0380%" height="15" fill="rgb(232,36,49)" fg:x="309" fg:w="4"/><text x="3.1884%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::index::impl$2::get_unchecked(unsigned long long, ptr_const$&lt;slice2$ (4 samples, 0.04%)</title><rect x="2.9384%" y="309" width="0.0380%" height="15" fill="rgb(209,103,24)" fg:x="309" fg:w="4"/><text x="3.1884%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::const_ptr::impl$0::add (4 samples, 0.04%)</title><rect x="2.9384%" y="293" width="0.0380%" height="15" fill="rgb(229,88,8)" fg:x="309" fg:w="4"/><text x="3.1884%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::const_ptr::impl$0::offset (4 samples, 0.04%)</title><rect x="2.9384%" y="277" width="0.0380%" height="15" fill="rgb(213,181,19)" fg:x="309" fg:w="4"/><text x="3.1884%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::Hole&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::move_to (15 samples, 0.14%)</title><rect x="2.9764%" y="341" width="0.1426%" height="15" fill="rgb(254,191,54)" fg:x="313" fg:w="15"/><text x="3.2264%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::intrinsics::copy_nonoverlapping (15 samples, 0.14%)</title><rect x="2.9764%" y="325" width="0.1426%" height="15" fill="rgb(241,83,37)" fg:x="313" fg:w="15"/><text x="3.2264%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::Hole&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::new(ref_mut$&lt;slice2$ (9 samples, 0.09%)</title><rect x="3.1191%" y="341" width="0.0856%" height="15" fill="rgb(233,36,39)" fg:x="328" fg:w="9"/><text x="3.3691%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::mem::manually_drop::ManuallyDrop&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::new (8 samples, 0.08%)</title><rect x="3.1286%" y="325" width="0.0761%" height="15" fill="rgb(226,3,54)" fg:x="329" fg:w="8"/><text x="3.3786%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::BinaryHeap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::sift_up (121 samples, 1.15%)</title><rect x="2.1871%" y="357" width="1.1506%" height="15" fill="rgb(245,192,40)" fg:x="230" fg:w="121"/><text x="2.4371%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::drop_in_place(alloc::collections::binary_heap::Hole (14 samples, 0.13%)</title><rect x="3.2046%" y="341" width="0.1331%" height="15" fill="rgb(238,167,29)" fg:x="337" fg:w="14"/><text x="3.4546%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::impl$11::drop(alloc::collections::binary_heap::Hole (14 samples, 0.13%)</title><rect x="3.2046%" y="325" width="0.1331%" height="15" fill="rgb(232,182,51)" fg:x="337" fg:w="14"/><text x="3.4546%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::impl$0::get_unchecked_mut(ref_mut$&lt;slice2$ (14 samples, 0.13%)</title><rect x="3.2046%" y="309" width="0.1331%" height="15" fill="rgb(231,60,39)" fg:x="337" fg:w="14"/><text x="3.4546%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::intrinsics::copy_nonoverlapping (319 samples, 3.03%)</title><rect x="3.3378%" y="341" width="3.0335%" height="15" fill="rgb(208,69,12)" fg:x="351" fg:w="319"/><text x="3.5878%" y="351.50">aoc..</text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::Hole&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::move_to (356 samples, 3.39%)</title><rect x="3.3378%" y="357" width="3.3853%" height="15" fill="rgb(235,93,37)" fg:x="351" fg:w="356"/><text x="3.5878%" y="367.50">aoc..</text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::add (37 samples, 0.35%)</title><rect x="6.3712%" y="341" width="0.3518%" height="15" fill="rgb(213,116,39)" fg:x="670" fg:w="37"/><text x="6.6212%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::offset (37 samples, 0.35%)</title><rect x="6.3712%" y="325" width="0.3518%" height="15" fill="rgb(222,207,29)" fg:x="670" fg:w="37"/><text x="6.6212%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::Hole&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::new(ref_mut$&lt;slice2$ (21 samples, 0.20%)</title><rect x="6.7231%" y="357" width="0.1997%" height="15" fill="rgb(206,96,30)" fg:x="707" fg:w="21"/><text x="6.9731%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::mem::manually_drop::ManuallyDrop&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::new (21 samples, 0.20%)</title><rect x="6.7231%" y="341" width="0.1997%" height="15" fill="rgb(218,138,4)" fg:x="707" fg:w="21"/><text x="6.9731%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::heuristic (675 samples, 6.42%)</title><rect x="7.3697%" y="293" width="6.4188%" height="15" fill="rgb(250,191,14)" fg:x="775" fg:w="675"/><text x="7.6197%" y="303.50">aoc_2021..</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$19::eq (84 samples, 0.80%)</title><rect x="12.9897%" y="277" width="0.7988%" height="15" fill="rgb(239,60,40)" fg:x="1366" fg:w="84"/><text x="13.2397%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::Ordering::then_with (64 samples, 0.61%)</title><rect x="13.7885%" y="293" width="0.6086%" height="15" fill="rgb(206,27,48)" fg:x="1450" fg:w="64"/><text x="14.0385%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$5::cmp::closure$0 (46 samples, 0.44%)</title><rect x="13.9597%" y="277" width="0.4374%" height="15" fill="rgb(225,35,8)" fg:x="1468" fg:w="46"/><text x="14.2097%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::impls::impl$55::cmp (46 samples, 0.44%)</title><rect x="13.9597%" y="261" width="0.4374%" height="15" fill="rgb(250,213,24)" fg:x="1468" fg:w="46"/><text x="14.2097%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::PartialOrd::le (788 samples, 7.49%)</title><rect x="6.9228%" y="341" width="7.4933%" height="15" fill="rgb(247,123,22)" fg:x="728" fg:w="788"/><text x="7.1728%" y="351.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$6::partial_cmp (766 samples, 7.28%)</title><rect x="7.1320%" y="325" width="7.2841%" height="15" fill="rgb(231,138,38)" fg:x="750" fg:w="766"/><text x="7.3820%" y="335.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$5::cmp (766 samples, 7.28%)</title><rect x="7.1320%" y="309" width="7.2841%" height="15" fill="rgb(231,145,46)" fg:x="750" fg:w="766"/><text x="7.3820%" y="319.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::impls::impl$55::cmp (2 samples, 0.02%)</title><rect x="14.3971%" y="293" width="0.0190%" height="15" fill="rgb(251,118,11)" fg:x="1514" fg:w="2"/><text x="14.6471%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::impls::impl$10::le (797 samples, 7.58%)</title><rect x="6.9228%" y="357" width="7.5789%" height="15" fill="rgb(217,147,25)" fg:x="728" fg:w="797"/><text x="7.1728%" y="367.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`core::slice::impl$0::get_unchecked(ref$&lt;slice2$ (9 samples, 0.09%)</title><rect x="14.4161%" y="341" width="0.0856%" height="15" fill="rgb(247,81,37)" fg:x="1516" fg:w="9"/><text x="14.6661%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::index::impl$2::get_unchecked(unsigned long long, ptr_const$&lt;slice2$ (9 samples, 0.09%)</title><rect x="14.4161%" y="325" width="0.0856%" height="15" fill="rgb(209,12,38)" fg:x="1516" fg:w="9"/><text x="14.6661%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::const_ptr::impl$0::add (9 samples, 0.09%)</title><rect x="14.4161%" y="309" width="0.0856%" height="15" fill="rgb(227,1,9)" fg:x="1516" fg:w="9"/><text x="14.6661%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::const_ptr::impl$0::offset (9 samples, 0.09%)</title><rect x="14.4161%" y="293" width="0.0856%" height="15" fill="rgb(248,47,43)" fg:x="1516" fg:w="9"/><text x="14.6661%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::BinaryHeap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::sift_down_to_bottom (1,367 samples, 13.00%)</title><rect x="1.6546%" y="373" width="12.9992%" height="15" fill="rgb(221,10,30)" fg:x="174" fg:w="1367"/><text x="1.9046%" y="383.50">aoc_2021_rust_practi..</text></g><g><title>aoc_2021_rust_practice.exe`core::mem::drop(alloc::collections::binary_heap::Hole (16 samples, 0.15%)</title><rect x="14.5017%" y="357" width="0.1521%" height="15" fill="rgb(210,229,1)" fg:x="1525" fg:w="16"/><text x="14.7517%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::drop_in_place(alloc::collections::binary_heap::Hole (16 samples, 0.15%)</title><rect x="14.5017%" y="341" width="0.1521%" height="15" fill="rgb(222,148,37)" fg:x="1525" fg:w="16"/><text x="14.7517%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::impl$11::drop(alloc::collections::binary_heap::Hole (16 samples, 0.15%)</title><rect x="14.5017%" y="325" width="0.1521%" height="15" fill="rgb(234,67,33)" fg:x="1525" fg:w="16"/><text x="14.7517%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::impl$0::get_unchecked_mut(ref_mut$&lt;slice2$ (16 samples, 0.15%)</title><rect x="14.5017%" y="309" width="0.1521%" height="15" fill="rgb(247,98,35)" fg:x="1525" fg:w="16"/><text x="14.7517%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::index::impl$2::get_unchecked_mut(unsigned long long, ptr_mut$&lt;slice2$ (8 samples, 0.08%)</title><rect x="14.5778%" y="293" width="0.0761%" height="15" fill="rgb(247,138,52)" fg:x="1533" fg:w="8"/><text x="14.8278%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::add (8 samples, 0.08%)</title><rect x="14.5778%" y="277" width="0.0761%" height="15" fill="rgb(213,79,30)" fg:x="1533" fg:w="8"/><text x="14.8278%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::offset (8 samples, 0.08%)</title><rect x="14.5778%" y="261" width="0.0761%" height="15" fill="rgb(246,177,23)" fg:x="1533" fg:w="8"/><text x="14.8278%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::read(core::mem::maybe_uninit::MaybeUninit (7 samples, 0.07%)</title><rect x="14.6539%" y="309" width="0.0666%" height="15" fill="rgb(230,62,27)" fg:x="1541" fg:w="7"/><text x="14.9039%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::BinaryHeap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::pop&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt; (1,404 samples, 13.35%)</title><rect x="1.3979%" y="421" width="13.3511%" height="15" fill="rgb(216,154,8)" fg:x="147" fg:w="1404"/><text x="1.6479%" y="431.50">aoc_2021_rust_practi..</text></g><g><title>aoc_2021_rust_practice.exe`enum2$&lt;core::option::Option&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt; &gt;::map(enum2$&lt;core::option::Option&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt; &gt;, alloc::collections::binary_heap::impl$8::pop::closure_env$0 (1,388 samples, 13.20%)</title><rect x="1.5500%" y="405" width="13.1989%" height="15" fill="rgb(244,35,45)" fg:x="163" fg:w="1388"/><text x="1.8000%" y="415.50">aoc_2021_rust_practi..</text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::impl$8::pop::closure$0(alloc::collections::binary_heap::impl$8::pop::closure_env$0 (1,379 samples, 13.11%)</title><rect x="1.6356%" y="389" width="13.1134%" height="15" fill="rgb(251,115,12)" fg:x="172" fg:w="1379"/><text x="1.8856%" y="399.50">aoc_2021_rust_practi..</text></g><g><title>aoc_2021_rust_practice.exe`core::mem::swap (10 samples, 0.10%)</title><rect x="14.6539%" y="373" width="0.0951%" height="15" fill="rgb(240,54,50)" fg:x="1541" fg:w="10"/><text x="14.9039%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::swap_nonoverlapping (10 samples, 0.10%)</title><rect x="14.6539%" y="357" width="0.0951%" height="15" fill="rgb(233,84,52)" fg:x="1541" fg:w="10"/><text x="14.9039%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::swap_nonoverlapping_simple_untyped (10 samples, 0.10%)</title><rect x="14.6539%" y="341" width="0.0951%" height="15" fill="rgb(207,117,47)" fg:x="1541" fg:w="10"/><text x="14.9039%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::mem::swap_simple(core::mem::maybe_uninit::MaybeUninit&lt;usize&gt;*, core::mem::maybe_uninit::MaybeUninit (10 samples, 0.10%)</title><rect x="14.6539%" y="325" width="0.0951%" height="15" fill="rgb(249,43,39)" fg:x="1541" fg:w="10"/><text x="14.9039%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::write(core::mem::maybe_uninit::MaybeUninit&lt;usize&gt;*, core::mem::maybe_uninit::MaybeUninit (3 samples, 0.03%)</title><rect x="14.7204%" y="309" width="0.0285%" height="15" fill="rgb(209,38,44)" fg:x="1548" fg:w="3"/><text x="14.9704%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::heuristic (16 samples, 0.15%)</title><rect x="15.0057%" y="325" width="0.1521%" height="15" fill="rgb(236,212,23)" fg:x="1578" fg:w="16"/><text x="15.2557%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$19::eq (7 samples, 0.07%)</title><rect x="15.0913%" y="309" width="0.0666%" height="15" fill="rgb(242,79,21)" fg:x="1587" fg:w="7"/><text x="15.3413%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::PartialOrd::le (48 samples, 0.46%)</title><rect x="14.9582%" y="373" width="0.4564%" height="15" fill="rgb(211,96,35)" fg:x="1573" fg:w="48"/><text x="15.2082%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$6::partial_cmp (48 samples, 0.46%)</title><rect x="14.9582%" y="357" width="0.4564%" height="15" fill="rgb(253,215,40)" fg:x="1573" fg:w="48"/><text x="15.2082%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$5::cmp (48 samples, 0.46%)</title><rect x="14.9582%" y="341" width="0.4564%" height="15" fill="rgb(211,81,21)" fg:x="1573" fg:w="48"/><text x="15.2082%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::impls::impl$55::cmp (27 samples, 0.26%)</title><rect x="15.1579%" y="325" width="0.2568%" height="15" fill="rgb(208,190,38)" fg:x="1594" fg:w="27"/><text x="15.4079%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::heuristic (26 samples, 0.25%)</title><rect x="15.1674%" y="309" width="0.2472%" height="15" fill="rgb(235,213,38)" fg:x="1595" fg:w="26"/><text x="15.4174%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$19::eq (7 samples, 0.07%)</title><rect x="15.3480%" y="293" width="0.0666%" height="15" fill="rgb(237,122,38)" fg:x="1614" fg:w="7"/><text x="15.5980%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::Hole&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::get (50 samples, 0.48%)</title><rect x="14.9582%" y="389" width="0.4755%" height="15" fill="rgb(244,218,35)" fg:x="1573" fg:w="50"/><text x="15.2082%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::impl$0::get_unchecked(ref$&lt;slice2$ (2 samples, 0.02%)</title><rect x="15.4146%" y="373" width="0.0190%" height="15" fill="rgb(240,68,47)" fg:x="1621" fg:w="2"/><text x="15.6646%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::index::impl$2::get_unchecked(unsigned long long, ptr_const$&lt;slice2$ (2 samples, 0.02%)</title><rect x="15.4146%" y="357" width="0.0190%" height="15" fill="rgb(210,16,53)" fg:x="1621" fg:w="2"/><text x="15.6646%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::const_ptr::impl$0::add (2 samples, 0.02%)</title><rect x="15.4146%" y="341" width="0.0190%" height="15" fill="rgb(235,124,12)" fg:x="1621" fg:w="2"/><text x="15.6646%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::const_ptr::impl$0::offset (2 samples, 0.02%)</title><rect x="15.4146%" y="325" width="0.0190%" height="15" fill="rgb(224,169,11)" fg:x="1621" fg:w="2"/><text x="15.6646%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::Hole&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::move_to (14 samples, 0.13%)</title><rect x="15.4336%" y="389" width="0.1331%" height="15" fill="rgb(250,166,2)" fg:x="1623" fg:w="14"/><text x="15.6836%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::intrinsics::copy_nonoverlapping (14 samples, 0.13%)</title><rect x="15.4336%" y="373" width="0.1331%" height="15" fill="rgb(242,216,29)" fg:x="1623" fg:w="14"/><text x="15.6836%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::Hole&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::new(ref_mut$&lt;slice2$ (13 samples, 0.12%)</title><rect x="15.5668%" y="389" width="0.1236%" height="15" fill="rgb(230,116,27)" fg:x="1637" fg:w="13"/><text x="15.8168%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::mem::manually_drop::ManuallyDrop&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::new (13 samples, 0.12%)</title><rect x="15.5668%" y="373" width="0.1236%" height="15" fill="rgb(228,99,48)" fg:x="1637" fg:w="13"/><text x="15.8168%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::BinaryHeap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::sift_up (97 samples, 0.92%)</title><rect x="14.8536%" y="405" width="0.9224%" height="15" fill="rgb(253,11,6)" fg:x="1562" fg:w="97"/><text x="15.1036%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::drop_in_place(alloc::collections::binary_heap::Hole (9 samples, 0.09%)</title><rect x="15.6904%" y="389" width="0.0856%" height="15" fill="rgb(247,143,39)" fg:x="1650" fg:w="9"/><text x="15.9404%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::impl$11::drop(alloc::collections::binary_heap::Hole (9 samples, 0.09%)</title><rect x="15.6904%" y="373" width="0.0856%" height="15" fill="rgb(236,97,10)" fg:x="1650" fg:w="9"/><text x="15.9404%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::impl$0::get_unchecked_mut(ref_mut$&lt;slice2$ (9 samples, 0.09%)</title><rect x="15.6904%" y="357" width="0.0856%" height="15" fill="rgb(233,208,19)" fg:x="1650" fg:w="9"/><text x="15.9404%" y="367.50"></text></g><g><title>`0x7FFC8CA940D3 (5 samples, 0.05%)</title><rect x="15.7855%" y="261" width="0.0475%" height="15" fill="rgb(216,164,2)" fg:x="1660" fg:w="5"/><text x="16.0355%" y="271.50"></text></g><g><title>`0x7FFC8CA127D9 (6 samples, 0.06%)</title><rect x="15.7855%" y="277" width="0.0571%" height="15" fill="rgb(220,129,5)" fg:x="1660" fg:w="6"/><text x="16.0355%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::reserve_for_push&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt; (8 samples, 0.08%)</title><rect x="15.7855%" y="389" width="0.0761%" height="15" fill="rgb(242,17,10)" fg:x="1660" fg:w="8"/><text x="16.0355%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::grow_amortized (8 samples, 0.08%)</title><rect x="15.7855%" y="373" width="0.0761%" height="15" fill="rgb(242,107,0)" fg:x="1660" fg:w="8"/><text x="16.0355%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (8 samples, 0.08%)</title><rect x="15.7855%" y="357" width="0.0761%" height="15" fill="rgb(251,28,31)" fg:x="1660" fg:w="8"/><text x="16.0355%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (8 samples, 0.08%)</title><rect x="15.7855%" y="341" width="0.0761%" height="15" fill="rgb(233,223,10)" fg:x="1660" fg:w="8"/><text x="16.0355%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (8 samples, 0.08%)</title><rect x="15.7855%" y="325" width="0.0761%" height="15" fill="rgb(215,21,27)" fg:x="1660" fg:w="8"/><text x="16.0355%" y="335.50"></text></g><g><title>`0x7FFC8CA136BD (8 samples, 0.08%)</title><rect x="15.7855%" y="309" width="0.0761%" height="15" fill="rgb(232,23,21)" fg:x="1660" fg:w="8"/><text x="16.0355%" y="319.50"></text></g><g><title>`0x7FFC8CA138E3 (8 samples, 0.08%)</title><rect x="15.7855%" y="293" width="0.0761%" height="15" fill="rgb(244,5,23)" fg:x="1660" fg:w="8"/><text x="16.0355%" y="303.50"></text></g><g><title>`0x7FFC8CA127F0 (2 samples, 0.02%)</title><rect x="15.8425%" y="277" width="0.0190%" height="15" fill="rgb(226,81,46)" fg:x="1666" fg:w="2"/><text x="16.0925%" y="287.50"></text></g><g><title>`0x7FFC8CA147B1 (2 samples, 0.02%)</title><rect x="15.8425%" y="261" width="0.0190%" height="15" fill="rgb(247,70,30)" fg:x="1666" fg:w="2"/><text x="16.0925%" y="271.50"></text></g><g><title>`0x7FFC8CA15B74 (2 samples, 0.02%)</title><rect x="15.8425%" y="245" width="0.0190%" height="15" fill="rgb(212,68,19)" fg:x="1666" fg:w="2"/><text x="16.0925%" y="255.50"></text></g><g><title>`0x7FFC8CA16F37 (2 samples, 0.02%)</title><rect x="15.8425%" y="229" width="0.0190%" height="15" fill="rgb(240,187,13)" fg:x="1666" fg:w="2"/><text x="16.0925%" y="239.50"></text></g><g><title>`0x7FFC8C9F9B1A (2 samples, 0.02%)</title><rect x="15.8425%" y="213" width="0.0190%" height="15" fill="rgb(223,113,26)" fg:x="1666" fg:w="2"/><text x="16.0925%" y="223.50"></text></g><g><title>`0x7FFC8CA8D474 (2 samples, 0.02%)</title><rect x="15.8425%" y="197" width="0.0190%" height="15" fill="rgb(206,192,2)" fg:x="1666" fg:w="2"/><text x="16.0925%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::collections::binary_heap::BinaryHeap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::push&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt; (125 samples, 1.19%)</title><rect x="14.7490%" y="421" width="1.1887%" height="15" fill="rgb(241,108,4)" fg:x="1551" fg:w="125"/><text x="14.9990%" y="431.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::push (17 samples, 0.16%)</title><rect x="15.7760%" y="405" width="0.1617%" height="15" fill="rgb(247,173,49)" fg:x="1659" fg:w="17"/><text x="16.0260%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::write (8 samples, 0.08%)</title><rect x="15.8615%" y="389" width="0.0761%" height="15" fill="rgb(224,114,35)" fg:x="1668" fg:w="8"/><text x="16.1115%" y="399.50"></text></g><g><title>`0x7FFC8CA14760 (2 samples, 0.02%)</title><rect x="16.2324%" y="373" width="0.0190%" height="15" fill="rgb(245,159,27)" fg:x="1707" fg:w="2"/><text x="16.4824%" y="383.50"></text></g><g><title>`0x7FFC8CA1479E (2 samples, 0.02%)</title><rect x="16.2514%" y="373" width="0.0190%" height="15" fill="rgb(245,172,44)" fg:x="1709" fg:w="2"/><text x="16.5014%" y="383.50"></text></g><g><title>`0x7FFC8CA1572F (2 samples, 0.02%)</title><rect x="16.2990%" y="357" width="0.0190%" height="15" fill="rgb(236,23,11)" fg:x="1714" fg:w="2"/><text x="16.5490%" y="367.50"></text></g><g><title>`0x7FFC8CA15BA1 (2 samples, 0.02%)</title><rect x="16.3560%" y="357" width="0.0190%" height="15" fill="rgb(205,117,38)" fg:x="1720" fg:w="2"/><text x="16.6060%" y="367.50"></text></g><g><title>`0x7FFC8CA14837 (2 samples, 0.02%)</title><rect x="16.3560%" y="341" width="0.0190%" height="15" fill="rgb(237,72,25)" fg:x="1720" fg:w="2"/><text x="16.6060%" y="351.50"></text></g><g><title>`0x7FFC8CA97036 (2 samples, 0.02%)</title><rect x="16.4226%" y="357" width="0.0190%" height="15" fill="rgb(244,70,9)" fg:x="1727" fg:w="2"/><text x="16.6726%" y="367.50"></text></g><g><title>`0x7FFC8CA970EA (6 samples, 0.06%)</title><rect x="16.4701%" y="357" width="0.0571%" height="15" fill="rgb(217,125,39)" fg:x="1732" fg:w="6"/><text x="16.7201%" y="367.50"></text></g><g><title>`0x7FFC8CA147B1 (29 samples, 0.28%)</title><rect x="16.2704%" y="373" width="0.2758%" height="15" fill="rgb(235,36,10)" fg:x="1711" fg:w="29"/><text x="16.5204%" y="383.50"></text></g><g><title>`0x7FFC8CA97105 (2 samples, 0.02%)</title><rect x="16.5272%" y="357" width="0.0190%" height="15" fill="rgb(251,123,47)" fg:x="1738" fg:w="2"/><text x="16.7772%" y="367.50"></text></g><g><title>`0x7FFC8CA1B39E (2 samples, 0.02%)</title><rect x="16.7744%" y="293" width="0.0190%" height="15" fill="rgb(221,13,13)" fg:x="1764" fg:w="2"/><text x="17.0244%" y="303.50"></text></g><g><title>`0x7FFC8CA1B3B7 (2 samples, 0.02%)</title><rect x="16.8030%" y="293" width="0.0190%" height="15" fill="rgb(238,131,9)" fg:x="1767" fg:w="2"/><text x="17.0530%" y="303.50"></text></g><g><title>`0x7FFC8CA1B3C2 (4 samples, 0.04%)</title><rect x="16.8220%" y="293" width="0.0380%" height="15" fill="rgb(211,50,8)" fg:x="1769" fg:w="4"/><text x="17.0720%" y="303.50"></text></g><g><title>`0x7FFC8CA1B676 (2 samples, 0.02%)</title><rect x="16.8886%" y="277" width="0.0190%" height="15" fill="rgb(245,182,24)" fg:x="1776" fg:w="2"/><text x="17.1386%" y="287.50"></text></g><g><title>`0x7FFC8CA1B6A6 (5 samples, 0.05%)</title><rect x="16.9171%" y="277" width="0.0475%" height="15" fill="rgb(242,14,37)" fg:x="1779" fg:w="5"/><text x="17.1671%" y="287.50"></text></g><g><title>`0x7FFC8CA1B721 (3 samples, 0.03%)</title><rect x="16.9836%" y="277" width="0.0285%" height="15" fill="rgb(246,228,12)" fg:x="1786" fg:w="3"/><text x="17.2336%" y="287.50"></text></g><g><title>`0x7FFC8CA1B73C (8 samples, 0.08%)</title><rect x="17.0122%" y="277" width="0.0761%" height="15" fill="rgb(213,55,15)" fg:x="1789" fg:w="8"/><text x="17.2622%" y="287.50"></text></g><g><title>`0x7FFC8CA1B748 (7 samples, 0.07%)</title><rect x="17.0882%" y="277" width="0.0666%" height="15" fill="rgb(209,9,3)" fg:x="1797" fg:w="7"/><text x="17.3382%" y="287.50"></text></g><g><title>`0x7FFC8CA1B7A2 (11 samples, 0.10%)</title><rect x="17.1833%" y="277" width="0.1046%" height="15" fill="rgb(230,59,30)" fg:x="1807" fg:w="11"/><text x="17.4333%" y="287.50"></text></g><g><title>`0x7FFC8C9F43E2 (3 samples, 0.03%)</title><rect x="17.3450%" y="261" width="0.0285%" height="15" fill="rgb(209,121,21)" fg:x="1824" fg:w="3"/><text x="17.5950%" y="271.50"></text></g><g><title>`0x7FFC8C9F440B (11 samples, 0.10%)</title><rect x="17.3830%" y="261" width="0.1046%" height="15" fill="rgb(220,109,13)" fg:x="1828" fg:w="11"/><text x="17.6330%" y="271.50"></text></g><g><title>`0x7FFC8C9F442C (2 samples, 0.02%)</title><rect x="17.4971%" y="261" width="0.0190%" height="15" fill="rgb(232,18,1)" fg:x="1840" fg:w="2"/><text x="17.7471%" y="271.50"></text></g><g><title>`0x7FFC8C9F4452 (2 samples, 0.02%)</title><rect x="17.5447%" y="261" width="0.0190%" height="15" fill="rgb(215,41,42)" fg:x="1845" fg:w="2"/><text x="17.7947%" y="271.50"></text></g><g><title>`0x7FFC8CA1B86B (24 samples, 0.23%)</title><rect x="17.3450%" y="277" width="0.2282%" height="15" fill="rgb(224,123,36)" fg:x="1824" fg:w="24"/><text x="17.5950%" y="287.50"></text></g><g><title>`0x7FFC8CA1B8A4 (26 samples, 0.25%)</title><rect x="17.5827%" y="277" width="0.2472%" height="15" fill="rgb(240,125,3)" fg:x="1849" fg:w="26"/><text x="17.8327%" y="287.50"></text></g><g><title>`0x7FFC8CA1B8D4 (2 samples, 0.02%)</title><rect x="17.8395%" y="277" width="0.0190%" height="15" fill="rgb(205,98,50)" fg:x="1876" fg:w="2"/><text x="18.0895%" y="287.50"></text></g><g><title>`0x7FFC8CA1B3C7 (107 samples, 1.02%)</title><rect x="16.8600%" y="293" width="1.0175%" height="15" fill="rgb(205,185,37)" fg:x="1773" fg:w="107"/><text x="17.1100%" y="303.50"></text></g><g><title>`0x7FFC8CA1B44D (5 samples, 0.05%)</title><rect x="17.8870%" y="293" width="0.0475%" height="15" fill="rgb(238,207,15)" fg:x="1881" fg:w="5"/><text x="18.1370%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::with_capacity (151 samples, 1.44%)</title><rect x="16.5462%" y="357" width="1.4359%" height="15" fill="rgb(213,199,42)" fg:x="1740" fg:w="151"/><text x="16.7962%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::with_capacity_in (151 samples, 1.44%)</title><rect x="16.5462%" y="341" width="1.4359%" height="15" fill="rgb(235,201,11)" fg:x="1740" fg:w="151"/><text x="16.7962%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::with_capacity_in (151 samples, 1.44%)</title><rect x="16.5462%" y="325" width="1.4359%" height="15" fill="rgb(207,46,11)" fg:x="1740" fg:w="151"/><text x="16.7962%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::allocate_in (151 samples, 1.44%)</title><rect x="16.5462%" y="309" width="1.4359%" height="15" fill="rgb(241,35,35)" fg:x="1740" fg:w="151"/><text x="16.7962%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::alloc::__default_lib_allocator::__rdl_alloc (3 samples, 0.03%)</title><rect x="17.9536%" y="293" width="0.0285%" height="15" fill="rgb(243,32,47)" fg:x="1888" fg:w="3"/><text x="18.2036%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::sys::windows::alloc::impl$0::alloc (2 samples, 0.02%)</title><rect x="17.9631%" y="277" width="0.0190%" height="15" fill="rgb(247,202,23)" fg:x="1889" fg:w="2"/><text x="18.2131%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::sys::windows::alloc::allocate (2 samples, 0.02%)</title><rect x="17.9631%" y="261" width="0.0190%" height="15" fill="rgb(219,102,11)" fg:x="1889" fg:w="2"/><text x="18.2131%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::reserve (2 samples, 0.02%)</title><rect x="18.0202%" y="325" width="0.0190%" height="15" fill="rgb(243,110,44)" fg:x="1895" fg:w="2"/><text x="18.2702%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::reserve (2 samples, 0.02%)</title><rect x="18.0202%" y="309" width="0.0190%" height="15" fill="rgb(222,74,54)" fg:x="1895" fg:w="2"/><text x="18.2702%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::needs_to_grow (2 samples, 0.02%)</title><rect x="18.0202%" y="293" width="0.0190%" height="15" fill="rgb(216,99,12)" fg:x="1895" fg:w="2"/><text x="18.2702%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::adapters::map::impl$2::size_hint(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (2 samples, 0.02%)</title><rect x="18.0392%" y="325" width="0.0190%" height="15" fill="rgb(226,22,26)" fg:x="1897" fg:w="2"/><text x="18.2892%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::into_iter::impl$5::size_hint(alloc::vec::into_iter::IntoIter (2 samples, 0.02%)</title><rect x="18.0392%" y="309" width="0.0190%" height="15" fill="rgb(217,163,10)" fg:x="1897" fg:w="2"/><text x="18.2892%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::const_ptr::impl$0::sub_ptr (2 samples, 0.02%)</title><rect x="18.0392%" y="293" width="0.0190%" height="15" fill="rgb(213,25,53)" fg:x="1897" fg:w="2"/><text x="18.2892%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::const_ptr::impl$0::add (2 samples, 0.02%)</title><rect x="18.0867%" y="261" width="0.0190%" height="15" fill="rgb(252,105,26)" fg:x="1902" fg:w="2"/><text x="18.3367%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::const_ptr::impl$0::offset (2 samples, 0.02%)</title><rect x="18.0867%" y="245" width="0.0190%" height="15" fill="rgb(220,39,43)" fg:x="1902" fg:w="2"/><text x="18.3367%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::into_iter::impl$5::next(alloc::vec::into_iter::IntoIter (5 samples, 0.05%)</title><rect x="18.0677%" y="277" width="0.0475%" height="15" fill="rgb(229,68,48)" fg:x="1900" fg:w="5"/><text x="18.3177%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$2::generate_from_moves::closure$0 (5 samples, 0.05%)</title><rect x="18.1153%" y="261" width="0.0475%" height="15" fill="rgb(252,8,32)" fg:x="1905" fg:w="5"/><text x="18.3653%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (3 samples, 0.03%)</title><rect x="18.1628%" y="229" width="0.0285%" height="15" fill="rgb(223,20,43)" fg:x="1910" fg:w="3"/><text x="18.4128%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Move,aoc_2021_rust_practice::solutions::day23_b::Grid,tuple$&lt;&gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::generate_from_moves::closure_env$0,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::vec::impl$22::extend_trusted::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global,core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::generate_from_moves::closure_env$0&gt; &gt; &gt; &gt;*, tuple$ (71 samples, 0.68%)</title><rect x="18.1153%" y="277" width="0.6752%" height="15" fill="rgb(229,81,49)" fg:x="1905" fg:w="71"/><text x="18.3653%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::vec::impl$22::extend_trusted::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global,core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::generate_from_moves::closure_env$0&gt; &gt; &gt;*, tuple$ (66 samples, 0.63%)</title><rect x="18.1628%" y="261" width="0.6276%" height="15" fill="rgb(236,28,36)" fg:x="1910" fg:w="66"/><text x="18.4128%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::impl$22::extend_trusted::closure$0(alloc::vec::impl$22::extend_trusted::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global,core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (66 samples, 0.63%)</title><rect x="18.1628%" y="245" width="0.6276%" height="15" fill="rgb(249,185,26)" fg:x="1910" fg:w="66"/><text x="18.4128%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::write (63 samples, 0.60%)</title><rect x="18.1913%" y="229" width="0.5991%" height="15" fill="rgb(249,174,33)" fg:x="1913" fg:w="63"/><text x="18.4413%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (88 samples, 0.84%)</title><rect x="17.9821%" y="357" width="0.8368%" height="15" fill="rgb(233,201,37)" fg:x="1891" fg:w="88"/><text x="18.2321%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (87 samples, 0.83%)</title><rect x="17.9916%" y="341" width="0.8273%" height="15" fill="rgb(221,78,26)" fg:x="1892" fg:w="87"/><text x="18.2416%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::generate_from_moves::closure_env$0&gt;, alloc::vec::impl$22::extend_trusted::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global,core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (80 samples, 0.76%)</title><rect x="18.0582%" y="325" width="0.7607%" height="15" fill="rgb(250,127,30)" fg:x="1899" fg:w="80"/><text x="18.3082%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::generate_from_moves::closure_env$0&gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::vec::impl$22::extend_trusted::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global,core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (80 samples, 0.76%)</title><rect x="18.0582%" y="309" width="0.7607%" height="15" fill="rgb(230,49,44)" fg:x="1899" fg:w="80"/><text x="18.3082%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::fold(alloc::vec::into_iter::IntoIter&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Move,aoc_2021_rust_practice::solutions::day23_b::Grid,tuple$&lt;&gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::generate_from_moves::closure_env$0,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::vec::impl$22::extend_trusted::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global,core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (80 samples, 0.76%)</title><rect x="18.0582%" y="293" width="0.7607%" height="15" fill="rgb(229,67,23)" fg:x="1899" fg:w="80"/><text x="18.3082%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::drop_in_place(alloc::vec::into_iter::IntoIter (3 samples, 0.03%)</title><rect x="18.7904%" y="277" width="0.0285%" height="15" fill="rgb(249,83,47)" fg:x="1976" fg:w="3"/><text x="19.0404%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::into_iter::impl$13::drop(alloc::vec::into_iter::IntoIter (3 samples, 0.03%)</title><rect x="18.7904%" y="261" width="0.0285%" height="15" fill="rgb(215,43,3)" fg:x="1976" fg:w="3"/><text x="19.0404%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::drop_in_place(alloc::vec::into_iter::impl$13::drop::DropGuard (3 samples, 0.03%)</title><rect x="18.7904%" y="245" width="0.0285%" height="15" fill="rgb(238,154,13)" fg:x="1976" fg:w="3"/><text x="19.0404%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::into_iter::impl$13::drop::impl$0::drop(alloc::vec::into_iter::impl$13::drop::DropGuard (3 samples, 0.03%)</title><rect x="18.7904%" y="229" width="0.0285%" height="15" fill="rgb(219,56,2)" fg:x="1976" fg:w="3"/><text x="19.0404%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (3 samples, 0.03%)</title><rect x="18.7904%" y="213" width="0.0285%" height="15" fill="rgb(233,0,4)" fg:x="1976" fg:w="3"/><text x="19.0404%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (3 samples, 0.03%)</title><rect x="18.7904%" y="197" width="0.0285%" height="15" fill="rgb(235,30,7)" fg:x="1976" fg:w="3"/><text x="19.0404%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::current_memory (2 samples, 0.02%)</title><rect x="18.7999%" y="181" width="0.0190%" height="15" fill="rgb(250,79,13)" fg:x="1977" fg:w="2"/><text x="19.0499%" y="191.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (243 samples, 2.31%)</title><rect x="16.5462%" y="373" width="2.3108%" height="15" fill="rgb(211,146,34)" fg:x="1740" fg:w="243"/><text x="16.7962%" y="383.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`core::iter::adapters::map::impl$2::size_hint(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (4 samples, 0.04%)</title><rect x="18.8189%" y="357" width="0.0380%" height="15" fill="rgb(228,22,38)" fg:x="1979" fg:w="4"/><text x="19.0689%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::into_iter::impl$5::size_hint(alloc::vec::into_iter::IntoIter (4 samples, 0.04%)</title><rect x="18.8189%" y="341" width="0.0380%" height="15" fill="rgb(235,168,5)" fg:x="1979" fg:w="4"/><text x="19.0689%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::const_ptr::impl$0::sub_ptr (4 samples, 0.04%)</title><rect x="18.8189%" y="325" width="0.0380%" height="15" fill="rgb(221,155,16)" fg:x="1979" fg:w="4"/><text x="19.0689%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::mem::manually_drop::ManuallyDrop&lt;alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt; &gt;::new(alloc::vec::Vec (308 samples, 2.93%)</title><rect x="15.9376%" y="405" width="2.9289%" height="15" fill="rgb(215,215,53)" fg:x="1676" fg:w="308"/><text x="16.1876%" y="415.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::in_place_collect::impl$1::from_iter&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::generate_from_moves::closure_env$0&gt; &gt;(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (306 samples, 2.91%)</title><rect x="15.9566%" y="389" width="2.9099%" height="15" fill="rgb(223,4,10)" fg:x="1678" fg:w="306"/><text x="16.2066%" y="399.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::impl$18::into_iter(alloc::vec::Vec (315 samples, 3.00%)</title><rect x="15.9376%" y="421" width="2.9954%" height="15" fill="rgb(234,103,6)" fg:x="1676" fg:w="315"/><text x="16.1876%" y="431.50">aoc..</text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::add (7 samples, 0.07%)</title><rect x="18.8665%" y="405" width="0.0666%" height="15" fill="rgb(227,97,0)" fg:x="1984" fg:w="7"/><text x="19.1165%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::offset (7 samples, 0.07%)</title><rect x="18.8665%" y="389" width="0.0666%" height="15" fill="rgb(234,150,53)" fg:x="1984" fg:w="7"/><text x="19.1165%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::into_iter::impl$5::next(alloc::vec::into_iter::IntoIter (16 samples, 0.15%)</title><rect x="18.9331%" y="421" width="0.1521%" height="15" fill="rgb(228,201,54)" fg:x="1991" fg:w="16"/><text x="19.1831%" y="431.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::read (10 samples, 0.10%)</title><rect x="18.9901%" y="405" width="0.0951%" height="15" fill="rgb(222,22,37)" fg:x="1997" fg:w="10"/><text x="19.2401%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::mem::maybe_uninit::MaybeUninit&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt;::assume_init(core::mem::maybe_uninit::MaybeUninit (10 samples, 0.10%)</title><rect x="18.9901%" y="389" width="0.0951%" height="15" fill="rgb(237,53,32)" fg:x="1997" fg:w="10"/><text x="19.2401%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::generate_from_moves(alloc::vec::Vec (3 samples, 0.03%)</title><rect x="19.0852%" y="421" width="0.0285%" height="15" fill="rgb(233,25,53)" fg:x="2007" fg:w="3"/><text x="19.3352%" y="431.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (3 samples, 0.03%)</title><rect x="19.0852%" y="405" width="0.0285%" height="15" fill="rgb(210,40,34)" fg:x="2007" fg:w="3"/><text x="19.3352%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::impl$17::from_iter(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (3 samples, 0.03%)</title><rect x="19.0852%" y="389" width="0.0285%" height="15" fill="rgb(241,220,44)" fg:x="2007" fg:w="3"/><text x="19.3352%" y="399.50"></text></g><g><title>`0x7FFC7D4812F0 (6 samples, 0.06%)</title><rect x="19.6177%" y="373" width="0.0571%" height="15" fill="rgb(235,28,35)" fg:x="2063" fg:w="6"/><text x="19.8677%" y="383.50"></text></g><g><title>`0x7FFC7D4812FE (8 samples, 0.08%)</title><rect x="19.6748%" y="373" width="0.0761%" height="15" fill="rgb(210,56,17)" fg:x="2069" fg:w="8"/><text x="19.9248%" y="383.50"></text></g><g><title>`0x7FFC7D481318 (12 samples, 0.11%)</title><rect x="19.7604%" y="373" width="0.1141%" height="15" fill="rgb(224,130,29)" fg:x="2078" fg:w="12"/><text x="20.0104%" y="383.50"></text></g><g><title>`0x7FFC7D48131B (15 samples, 0.14%)</title><rect x="19.8745%" y="373" width="0.1426%" height="15" fill="rgb(235,212,8)" fg:x="2090" fg:w="15"/><text x="20.1245%" y="383.50"></text></g><g><title>`0x7FFC7D48131E (2 samples, 0.02%)</title><rect x="20.0171%" y="373" width="0.0190%" height="15" fill="rgb(223,33,50)" fg:x="2105" fg:w="2"/><text x="20.2671%" y="383.50"></text></g><g><title>`0x7FFC7D481421 (2 samples, 0.02%)</title><rect x="20.0361%" y="373" width="0.0190%" height="15" fill="rgb(219,149,13)" fg:x="2107" fg:w="2"/><text x="20.2861%" y="383.50"></text></g><g><title>`0x7FFC7D481425 (5 samples, 0.05%)</title><rect x="20.0552%" y="373" width="0.0475%" height="15" fill="rgb(250,156,29)" fg:x="2109" fg:w="5"/><text x="20.3052%" y="383.50"></text></g><g><title>`0x7FFC7D48142C (4 samples, 0.04%)</title><rect x="20.1027%" y="373" width="0.0380%" height="15" fill="rgb(216,193,19)" fg:x="2114" fg:w="4"/><text x="20.3527%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::current_memory (2 samples, 0.02%)</title><rect x="20.3404%" y="309" width="0.0190%" height="15" fill="rgb(216,135,14)" fg:x="2139" fg:w="2"/><text x="20.5904%" y="319.50"></text></g><g><title>`0x7FFC8CA1B721 (2 samples, 0.02%)</title><rect x="20.4545%" y="197" width="0.0190%" height="15" fill="rgb(241,47,5)" fg:x="2151" fg:w="2"/><text x="20.7045%" y="207.50"></text></g><g><title>`0x7FFC8CA1B86B (4 samples, 0.04%)</title><rect x="20.5021%" y="197" width="0.0380%" height="15" fill="rgb(233,42,35)" fg:x="2156" fg:w="4"/><text x="20.7521%" y="207.50"></text></g><g><title>`0x7FFC8CA1B8A4 (3 samples, 0.03%)</title><rect x="20.5401%" y="197" width="0.0285%" height="15" fill="rgb(231,13,6)" fg:x="2160" fg:w="3"/><text x="20.7901%" y="207.50"></text></g><g><title>`0x7FFC8CA11BF2 (16 samples, 0.15%)</title><rect x="20.4260%" y="229" width="0.1521%" height="15" fill="rgb(207,181,40)" fg:x="2148" fg:w="16"/><text x="20.6760%" y="239.50"></text></g><g><title>`0x7FFC8CA1B3C7 (14 samples, 0.13%)</title><rect x="20.4450%" y="213" width="0.1331%" height="15" fill="rgb(254,173,49)" fg:x="2150" fg:w="14"/><text x="20.6950%" y="223.50"></text></g><g><title>`0x7FFC8CA136BD (22 samples, 0.21%)</title><rect x="20.3880%" y="261" width="0.2092%" height="15" fill="rgb(221,1,38)" fg:x="2144" fg:w="22"/><text x="20.6380%" y="271.50"></text></g><g><title>`0x7FFC8CA138E3 (20 samples, 0.19%)</title><rect x="20.4070%" y="245" width="0.1902%" height="15" fill="rgb(206,124,46)" fg:x="2146" fg:w="20"/><text x="20.6570%" y="255.50"></text></g><g><title>`0x7FFC8CA11C3D (2 samples, 0.02%)</title><rect x="20.5782%" y="229" width="0.0190%" height="15" fill="rgb(249,21,11)" fg:x="2164" fg:w="2"/><text x="20.8282%" y="239.50"></text></g><g><title>`0x7FFC8CA1B307 (3 samples, 0.03%)</title><rect x="20.6638%" y="261" width="0.0285%" height="15" fill="rgb(222,201,40)" fg:x="2173" fg:w="3"/><text x="20.9138%" y="271.50"></text></g><g><title>`0x7FFC8CA1B68C (2 samples, 0.02%)</title><rect x="20.7303%" y="245" width="0.0190%" height="15" fill="rgb(235,61,29)" fg:x="2180" fg:w="2"/><text x="20.9803%" y="255.50"></text></g><g><title>`0x7FFC8CA1B6A6 (8 samples, 0.08%)</title><rect x="20.7493%" y="245" width="0.0761%" height="15" fill="rgb(219,207,3)" fg:x="2182" fg:w="8"/><text x="20.9993%" y="255.50"></text></g><g><title>`0x7FFC8CA1B721 (6 samples, 0.06%)</title><rect x="20.8539%" y="245" width="0.0571%" height="15" fill="rgb(222,56,46)" fg:x="2193" fg:w="6"/><text x="21.1039%" y="255.50"></text></g><g><title>`0x7FFC8CA1B73C (3 samples, 0.03%)</title><rect x="20.9110%" y="245" width="0.0285%" height="15" fill="rgb(239,76,54)" fg:x="2199" fg:w="3"/><text x="21.1610%" y="255.50"></text></g><g><title>`0x7FFC8CA1B74C (2 samples, 0.02%)</title><rect x="20.9585%" y="245" width="0.0190%" height="15" fill="rgb(231,124,27)" fg:x="2204" fg:w="2"/><text x="21.2085%" y="255.50"></text></g><g><title>`0x7FFC8CA1B75B (6 samples, 0.06%)</title><rect x="20.9871%" y="245" width="0.0571%" height="15" fill="rgb(249,195,6)" fg:x="2207" fg:w="6"/><text x="21.2371%" y="255.50"></text></g><g><title>`0x7FFC8CA1B7A2 (8 samples, 0.08%)</title><rect x="21.0536%" y="245" width="0.0761%" height="15" fill="rgb(237,174,47)" fg:x="2214" fg:w="8"/><text x="21.3036%" y="255.50"></text></g><g><title>`0x7FFC8CA1B7E6 (2 samples, 0.02%)</title><rect x="21.1297%" y="245" width="0.0190%" height="15" fill="rgb(206,201,31)" fg:x="2222" fg:w="2"/><text x="21.3797%" y="255.50"></text></g><g><title>`0x7FFC8C9F4408 (3 samples, 0.03%)</title><rect x="21.1677%" y="229" width="0.0285%" height="15" fill="rgb(231,57,52)" fg:x="2226" fg:w="3"/><text x="21.4177%" y="239.50"></text></g><g><title>`0x7FFC8C9F4428 (2 samples, 0.02%)</title><rect x="21.1963%" y="229" width="0.0190%" height="15" fill="rgb(248,177,22)" fg:x="2229" fg:w="2"/><text x="21.4463%" y="239.50"></text></g><g><title>`0x7FFC8C9F4432 (3 samples, 0.03%)</title><rect x="21.2153%" y="229" width="0.0285%" height="15" fill="rgb(215,211,37)" fg:x="2231" fg:w="3"/><text x="21.4653%" y="239.50"></text></g><g><title>`0x7FFC8C9F444B (3 samples, 0.03%)</title><rect x="21.2438%" y="229" width="0.0285%" height="15" fill="rgb(241,128,51)" fg:x="2234" fg:w="3"/><text x="21.4938%" y="239.50"></text></g><g><title>`0x7FFC8C9F4452 (2 samples, 0.02%)</title><rect x="21.2723%" y="229" width="0.0190%" height="15" fill="rgb(227,165,31)" fg:x="2237" fg:w="2"/><text x="21.5223%" y="239.50"></text></g><g><title>`0x7FFC8C9F4455 (2 samples, 0.02%)</title><rect x="21.2914%" y="229" width="0.0190%" height="15" fill="rgb(228,167,24)" fg:x="2239" fg:w="2"/><text x="21.5414%" y="239.50"></text></g><g><title>`0x7FFC8C9F445C (2 samples, 0.02%)</title><rect x="21.3104%" y="229" width="0.0190%" height="15" fill="rgb(228,143,12)" fg:x="2241" fg:w="2"/><text x="21.5604%" y="239.50"></text></g><g><title>`0x7FFC8CA1B86B (19 samples, 0.18%)</title><rect x="21.1677%" y="245" width="0.1807%" height="15" fill="rgb(249,149,8)" fg:x="2226" fg:w="19"/><text x="21.4177%" y="255.50"></text></g><g><title>`0x7FFC8CA1B8A4 (17 samples, 0.16%)</title><rect x="21.3579%" y="245" width="0.1617%" height="15" fill="rgb(243,35,44)" fg:x="2246" fg:w="17"/><text x="21.6079%" y="255.50"></text></g><g><title>`0x7FFC8CA1B8AA (2 samples, 0.02%)</title><rect x="21.5196%" y="245" width="0.0190%" height="15" fill="rgb(246,89,9)" fg:x="2263" fg:w="2"/><text x="21.7696%" y="255.50"></text></g><g><title>`0x7FFC8CA1B3C7 (91 samples, 0.87%)</title><rect x="20.7018%" y="261" width="0.8653%" height="15" fill="rgb(233,213,13)" fg:x="2177" fg:w="91"/><text x="20.9518%" y="271.50"></text></g><g><title>`0x7FFC8CA1B633 (2 samples, 0.02%)</title><rect x="21.5766%" y="261" width="0.0190%" height="15" fill="rgb(233,141,41)" fg:x="2269" fg:w="2"/><text x="21.8266%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`__rust_alloc (2 samples, 0.02%)</title><rect x="21.5957%" y="261" width="0.0190%" height="15" fill="rgb(239,167,4)" fg:x="2271" fg:w="2"/><text x="21.8457%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::ptr (149 samples, 1.42%)</title><rect x="20.2548%" y="357" width="1.4169%" height="15" fill="rgb(209,217,16)" fg:x="2130" fg:w="149"/><text x="20.5048%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (148 samples, 1.41%)</title><rect x="20.2644%" y="341" width="1.4074%" height="15" fill="rgb(219,88,35)" fg:x="2131" fg:w="148"/><text x="20.5144%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::grow_amortized (147 samples, 1.40%)</title><rect x="20.2739%" y="325" width="1.3979%" height="15" fill="rgb(220,193,23)" fg:x="2132" fg:w="147"/><text x="20.5239%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (138 samples, 1.31%)</title><rect x="20.3595%" y="309" width="1.3123%" height="15" fill="rgb(230,90,52)" fg:x="2141" fg:w="138"/><text x="20.6095%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (138 samples, 1.31%)</title><rect x="20.3595%" y="293" width="1.3123%" height="15" fill="rgb(252,106,19)" fg:x="2141" fg:w="138"/><text x="20.6095%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (137 samples, 1.30%)</title><rect x="20.3690%" y="277" width="1.3028%" height="15" fill="rgb(206,74,20)" fg:x="2142" fg:w="137"/><text x="20.6190%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::alloc::__default_lib_allocator::__rdl_alloc (6 samples, 0.06%)</title><rect x="21.6147%" y="261" width="0.0571%" height="15" fill="rgb(230,138,44)" fg:x="2273" fg:w="6"/><text x="21.8647%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::sys::windows::alloc::impl$0::alloc (5 samples, 0.05%)</title><rect x="21.6242%" y="245" width="0.0475%" height="15" fill="rgb(235,182,43)" fg:x="2274" fg:w="5"/><text x="21.8742%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::sys::windows::alloc::allocate (5 samples, 0.05%)</title><rect x="21.6242%" y="229" width="0.0475%" height="15" fill="rgb(242,16,51)" fg:x="2274" fg:w="5"/><text x="21.8742%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::as_mut_ptr (168 samples, 1.60%)</title><rect x="20.1502%" y="373" width="1.5976%" height="15" fill="rgb(248,9,4)" fg:x="2119" fg:w="168"/><text x="20.4002%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::offset (8 samples, 0.08%)</title><rect x="21.6717%" y="357" width="0.0761%" height="15" fill="rgb(210,31,22)" fg:x="2279" fg:w="8"/><text x="21.9217%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::len (2 samples, 0.02%)</title><rect x="21.7478%" y="373" width="0.0190%" height="15" fill="rgb(239,54,39)" fg:x="2287" fg:w="2"/><text x="21.9978%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::reserve (20 samples, 0.19%)</title><rect x="21.7668%" y="373" width="0.1902%" height="15" fill="rgb(230,99,41)" fg:x="2289" fg:w="20"/><text x="22.0168%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::reserve (20 samples, 0.19%)</title><rect x="21.7668%" y="357" width="0.1902%" height="15" fill="rgb(253,106,12)" fg:x="2289" fg:w="20"/><text x="22.0168%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::needs_to_grow (11 samples, 0.10%)</title><rect x="21.8524%" y="341" width="0.1046%" height="15" fill="rgb(213,46,41)" fg:x="2298" fg:w="11"/><text x="22.1024%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::capacity (3 samples, 0.03%)</title><rect x="21.9285%" y="325" width="0.0285%" height="15" fill="rgb(215,133,35)" fg:x="2306" fg:w="3"/><text x="22.1785%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (273 samples, 2.60%)</title><rect x="19.4466%" y="389" width="2.5960%" height="15" fill="rgb(213,28,5)" fg:x="2045" fg:w="273"/><text x="19.6966%" y="399.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`memcpy (9 samples, 0.09%)</title><rect x="21.9570%" y="373" width="0.0856%" height="15" fill="rgb(215,77,49)" fg:x="2309" fg:w="9"/><text x="22.2070%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::new (12 samples, 0.11%)</title><rect x="23.9920%" y="341" width="0.1141%" height="15" fill="rgb(248,100,22)" fg:x="2523" fg:w="12"/><text x="24.2420%" y="351.50"></text></g><g><title>`0x7FFC8CA1A9C7 (6 samples, 0.06%)</title><rect x="24.1251%" y="277" width="0.0571%" height="15" fill="rgb(208,67,9)" fg:x="2537" fg:w="6"/><text x="24.3751%" y="287.50"></text></g><g><title>`0x7FFC8CA1A9D9 (2 samples, 0.02%)</title><rect x="24.2012%" y="277" width="0.0190%" height="15" fill="rgb(219,133,21)" fg:x="2545" fg:w="2"/><text x="24.4512%" y="287.50"></text></g><g><title>`0x7FFC8CA1A9E3 (2 samples, 0.02%)</title><rect x="24.2202%" y="277" width="0.0190%" height="15" fill="rgb(246,46,29)" fg:x="2547" fg:w="2"/><text x="24.4702%" y="287.50"></text></g><g><title>`0x7FFC8CA1B3C2 (16 samples, 0.15%)</title><rect x="24.3724%" y="277" width="0.1521%" height="15" fill="rgb(246,185,52)" fg:x="2563" fg:w="16"/><text x="24.6224%" y="287.50"></text></g><g><title>`0x7FFC8CA1B650 (2 samples, 0.02%)</title><rect x="24.5245%" y="261" width="0.0190%" height="15" fill="rgb(252,136,11)" fg:x="2579" fg:w="2"/><text x="24.7745%" y="271.50"></text></g><g><title>`0x7FFC8CA1B663 (2 samples, 0.02%)</title><rect x="24.5436%" y="261" width="0.0190%" height="15" fill="rgb(219,138,53)" fg:x="2581" fg:w="2"/><text x="24.7936%" y="271.50"></text></g><g><title>`0x7FFC8CA1B68C (2 samples, 0.02%)</title><rect x="24.5721%" y="261" width="0.0190%" height="15" fill="rgb(211,51,23)" fg:x="2584" fg:w="2"/><text x="24.8221%" y="271.50"></text></g><g><title>`0x7FFC8CA1B6A6 (4 samples, 0.04%)</title><rect x="24.6006%" y="261" width="0.0380%" height="15" fill="rgb(247,221,28)" fg:x="2587" fg:w="4"/><text x="24.8506%" y="271.50"></text></g><g><title>`0x7FFC8CA1B6FA (2 samples, 0.02%)</title><rect x="24.6386%" y="261" width="0.0190%" height="15" fill="rgb(251,222,45)" fg:x="2591" fg:w="2"/><text x="24.8886%" y="271.50"></text></g><g><title>`0x7FFC8CA1B701 (2 samples, 0.02%)</title><rect x="24.6577%" y="261" width="0.0190%" height="15" fill="rgb(217,162,53)" fg:x="2593" fg:w="2"/><text x="24.9077%" y="271.50"></text></g><g><title>`0x7FFC8CA1B721 (7 samples, 0.07%)</title><rect x="24.6767%" y="261" width="0.0666%" height="15" fill="rgb(229,93,14)" fg:x="2595" fg:w="7"/><text x="24.9267%" y="271.50"></text></g><g><title>`0x7FFC8CA1B73C (11 samples, 0.10%)</title><rect x="24.7432%" y="261" width="0.1046%" height="15" fill="rgb(209,67,49)" fg:x="2602" fg:w="11"/><text x="24.9932%" y="271.50"></text></g><g><title>`0x7FFC8CA1B748 (6 samples, 0.06%)</title><rect x="24.8479%" y="261" width="0.0571%" height="15" fill="rgb(213,87,29)" fg:x="2613" fg:w="6"/><text x="25.0979%" y="271.50"></text></g><g><title>`0x7FFC8CA1B74F (3 samples, 0.03%)</title><rect x="24.9049%" y="261" width="0.0285%" height="15" fill="rgb(205,151,52)" fg:x="2619" fg:w="3"/><text x="25.1549%" y="271.50"></text></g><g><title>`0x7FFC8CA1B75B (2 samples, 0.02%)</title><rect x="24.9334%" y="261" width="0.0190%" height="15" fill="rgb(253,215,39)" fg:x="2622" fg:w="2"/><text x="25.1834%" y="271.50"></text></g><g><title>`0x7FFC8CA1B763 (3 samples, 0.03%)</title><rect x="24.9525%" y="261" width="0.0285%" height="15" fill="rgb(221,220,41)" fg:x="2624" fg:w="3"/><text x="25.2025%" y="271.50"></text></g><g><title>`0x7FFC8CA1B7A2 (12 samples, 0.11%)</title><rect x="24.9810%" y="261" width="0.1141%" height="15" fill="rgb(218,133,21)" fg:x="2627" fg:w="12"/><text x="25.2310%" y="271.50"></text></g><g><title>`0x7FFC8CA1B813 (7 samples, 0.07%)</title><rect x="25.0951%" y="261" width="0.0666%" height="15" fill="rgb(221,193,43)" fg:x="2639" fg:w="7"/><text x="25.3451%" y="271.50"></text></g><g><title>`0x7FFC8CA1B838 (2 samples, 0.02%)</title><rect x="25.1617%" y="261" width="0.0190%" height="15" fill="rgb(240,128,52)" fg:x="2646" fg:w="2"/><text x="25.4117%" y="271.50"></text></g><g><title>`0x7FFC8CA1B859 (2 samples, 0.02%)</title><rect x="25.1807%" y="261" width="0.0190%" height="15" fill="rgb(253,114,12)" fg:x="2648" fg:w="2"/><text x="25.4307%" y="271.50"></text></g><g><title>`0x7FFC8CA1B862 (3 samples, 0.03%)</title><rect x="25.1997%" y="261" width="0.0285%" height="15" fill="rgb(215,223,47)" fg:x="2650" fg:w="3"/><text x="25.4497%" y="271.50"></text></g><g><title>`0x7FFC8C9F43E2 (2 samples, 0.02%)</title><rect x="25.2282%" y="245" width="0.0190%" height="15" fill="rgb(248,225,23)" fg:x="2653" fg:w="2"/><text x="25.4782%" y="255.50"></text></g><g><title>`0x7FFC8C9F43E6 (3 samples, 0.03%)</title><rect x="25.2472%" y="245" width="0.0285%" height="15" fill="rgb(250,108,0)" fg:x="2655" fg:w="3"/><text x="25.4972%" y="255.50"></text></g><g><title>`0x7FFC8C9F440B (2 samples, 0.02%)</title><rect x="25.2853%" y="245" width="0.0190%" height="15" fill="rgb(228,208,7)" fg:x="2659" fg:w="2"/><text x="25.5353%" y="255.50"></text></g><g><title>`0x7FFC8C9F442C (2 samples, 0.02%)</title><rect x="25.3043%" y="245" width="0.0190%" height="15" fill="rgb(244,45,10)" fg:x="2661" fg:w="2"/><text x="25.5543%" y="255.50"></text></g><g><title>`0x7FFC8C9F4432 (3 samples, 0.03%)</title><rect x="25.3233%" y="245" width="0.0285%" height="15" fill="rgb(207,125,25)" fg:x="2663" fg:w="3"/><text x="25.5733%" y="255.50"></text></g><g><title>`0x7FFC8C9F444B (3 samples, 0.03%)</title><rect x="25.3899%" y="245" width="0.0285%" height="15" fill="rgb(210,195,18)" fg:x="2670" fg:w="3"/><text x="25.6399%" y="255.50"></text></g><g><title>`0x7FFC8C9F4458 (2 samples, 0.02%)</title><rect x="25.4469%" y="245" width="0.0190%" height="15" fill="rgb(249,80,12)" fg:x="2676" fg:w="2"/><text x="25.6969%" y="255.50"></text></g><g><title>`0x7FFC8C9F445C (3 samples, 0.03%)</title><rect x="25.4660%" y="245" width="0.0285%" height="15" fill="rgb(221,65,9)" fg:x="2678" fg:w="3"/><text x="25.7160%" y="255.50"></text></g><g><title>`0x7FFC8CA1B86B (30 samples, 0.29%)</title><rect x="25.2282%" y="261" width="0.2853%" height="15" fill="rgb(235,49,36)" fg:x="2653" fg:w="30"/><text x="25.4782%" y="271.50"></text></g><g><title>`0x7FFC8C9F4479 (2 samples, 0.02%)</title><rect x="25.4945%" y="245" width="0.0190%" height="15" fill="rgb(225,32,20)" fg:x="2681" fg:w="2"/><text x="25.7445%" y="255.50"></text></g><g><title>`0x7FFC8CA1B87A (2 samples, 0.02%)</title><rect x="25.5135%" y="261" width="0.0190%" height="15" fill="rgb(215,141,46)" fg:x="2683" fg:w="2"/><text x="25.7635%" y="271.50"></text></g><g><title>`0x7FFC8CA1B896 (2 samples, 0.02%)</title><rect x="25.5325%" y="261" width="0.0190%" height="15" fill="rgb(250,160,47)" fg:x="2685" fg:w="2"/><text x="25.7825%" y="271.50"></text></g><g><title>`0x7FFC8CA1B8A4 (26 samples, 0.25%)</title><rect x="25.5515%" y="261" width="0.2472%" height="15" fill="rgb(216,222,40)" fg:x="2687" fg:w="26"/><text x="25.8015%" y="271.50"></text></g><g><title>`0x7FFC8CA1B8D4 (2 samples, 0.02%)</title><rect x="25.8083%" y="261" width="0.0190%" height="15" fill="rgb(234,217,39)" fg:x="2714" fg:w="2"/><text x="26.0583%" y="271.50"></text></g><g><title>`0x7FFC8CA1B3C7 (143 samples, 1.36%)</title><rect x="24.5245%" y="277" width="1.3598%" height="15" fill="rgb(207,178,40)" fg:x="2579" fg:w="143"/><text x="24.7745%" y="287.50"></text></g><g><title>`0x7FFC8CA1BA28 (2 samples, 0.02%)</title><rect x="25.8653%" y="261" width="0.0190%" height="15" fill="rgb(221,136,13)" fg:x="2720" fg:w="2"/><text x="26.1153%" y="271.50"></text></g><g><title>`0x7FFC8C9FA4EB (2 samples, 0.02%)</title><rect x="25.8653%" y="245" width="0.0190%" height="15" fill="rgb(249,199,10)" fg:x="2720" fg:w="2"/><text x="26.1153%" y="255.50"></text></g><g><title>`0x7FFC8CA1B527 (2 samples, 0.02%)</title><rect x="25.9034%" y="277" width="0.0190%" height="15" fill="rgb(249,222,13)" fg:x="2724" fg:w="2"/><text x="26.1534%" y="287.50"></text></g><g><title>`0x7FFC8CA1B633 (3 samples, 0.03%)</title><rect x="25.9224%" y="277" width="0.0285%" height="15" fill="rgb(244,185,38)" fg:x="2726" fg:w="3"/><text x="26.1724%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::alloc::impl$1::allocate (3 samples, 0.03%)</title><rect x="25.9509%" y="277" width="0.0285%" height="15" fill="rgb(236,202,9)" fg:x="2729" fg:w="3"/><text x="26.2009%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="25.9509%" y="261" width="0.0285%" height="15" fill="rgb(250,229,37)" fg:x="2729" fg:w="3"/><text x="26.2009%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="25.9509%" y="245" width="0.0285%" height="15" fill="rgb(206,174,23)" fg:x="2729" fg:w="3"/><text x="26.2009%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::with_capacity (206 samples, 1.96%)</title><rect x="24.1061%" y="341" width="1.9589%" height="15" fill="rgb(211,33,43)" fg:x="2535" fg:w="206"/><text x="24.3561%" y="351.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::with_capacity_in (206 samples, 1.96%)</title><rect x="24.1061%" y="325" width="1.9589%" height="15" fill="rgb(245,58,50)" fg:x="2535" fg:w="206"/><text x="24.3561%" y="335.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::with_capacity_in (206 samples, 1.96%)</title><rect x="24.1061%" y="309" width="1.9589%" height="15" fill="rgb(244,68,36)" fg:x="2535" fg:w="206"/><text x="24.3561%" y="319.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::allocate_in (206 samples, 1.96%)</title><rect x="24.1061%" y="293" width="1.9589%" height="15" fill="rgb(232,229,15)" fg:x="2535" fg:w="206"/><text x="24.3561%" y="303.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`std::alloc::__default_lib_allocator::__rdl_alloc (9 samples, 0.09%)</title><rect x="25.9795%" y="277" width="0.0856%" height="15" fill="rgb(254,30,23)" fg:x="2732" fg:w="9"/><text x="26.2295%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::sys::windows::alloc::impl$0::alloc (9 samples, 0.09%)</title><rect x="25.9795%" y="261" width="0.0856%" height="15" fill="rgb(235,160,14)" fg:x="2732" fg:w="9"/><text x="26.2295%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::sys::windows::alloc::allocate (9 samples, 0.09%)</title><rect x="25.9795%" y="245" width="0.0856%" height="15" fill="rgb(212,155,44)" fg:x="2732" fg:w="9"/><text x="26.2295%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::sys::windows::alloc::init_or_get_process_heap (4 samples, 0.04%)</title><rect x="26.0270%" y="229" width="0.0380%" height="15" fill="rgb(226,2,50)" fg:x="2737" fg:w="4"/><text x="26.2770%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::PartialEq::ne (9 samples, 0.09%)</title><rect x="27.3868%" y="181" width="0.0856%" height="15" fill="rgb(234,177,6)" fg:x="2880" fg:w="9"/><text x="27.6368%" y="191.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$19::eq (9 samples, 0.09%)</title><rect x="27.3868%" y="165" width="0.0856%" height="15" fill="rgb(217,24,9)" fg:x="2880" fg:w="9"/><text x="27.6368%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure$0 (192 samples, 1.83%)</title><rect x="26.0746%" y="213" width="1.8258%" height="15" fill="rgb(220,13,46)" fg:x="2742" fg:w="192"/><text x="26.3246%" y="223.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::route_is_empty(ref$&lt;slice2$ (170 samples, 1.62%)</title><rect x="26.2838%" y="197" width="1.6166%" height="15" fill="rgb(239,221,27)" fg:x="2764" fg:w="170"/><text x="26.5338%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (45 samples, 0.43%)</title><rect x="27.4724%" y="181" width="0.4279%" height="15" fill="rgb(222,198,25)" fg:x="2889" fg:w="45"/><text x="27.7224%" y="191.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::bronze_correct_below_room (4 samples, 0.04%)</title><rect x="28.0620%" y="133" width="0.0380%" height="15" fill="rgb(211,99,13)" fg:x="2951" fg:w="4"/><text x="28.3120%" y="143.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::copper_correct_below_room (5 samples, 0.05%)</title><rect x="28.1000%" y="133" width="0.0475%" height="15" fill="rgb(232,111,31)" fg:x="2955" fg:w="5"/><text x="28.3500%" y="143.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::adapters::filter::filter_try_fold::closure$0(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,tuple$&lt;&gt; &gt; &gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$0,core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,ref_mut$&lt;aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$1&gt; &gt; &gt;*, tuple$ (230 samples, 2.19%)</title><rect x="26.0746%" y="229" width="2.1871%" height="15" fill="rgb(245,82,37)" fg:x="2742" fg:w="230"/><text x="26.3246%" y="239.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::find::check::closure$0(core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,ref_mut$&lt;aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$1&gt; &gt;*, tuple$ (38 samples, 0.36%)</title><rect x="27.9003%" y="213" width="0.3614%" height="15" fill="rgb(227,149,46)" fg:x="2934" fg:w="38"/><text x="28.1503%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ops::function::impls::impl$3::call_mut (38 samples, 0.36%)</title><rect x="27.9003%" y="197" width="0.3614%" height="15" fill="rgb(218,36,50)" fg:x="2934" fg:w="38"/><text x="28.1503%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure$1 (38 samples, 0.36%)</title><rect x="27.9003%" y="181" width="0.3614%" height="15" fill="rgb(226,80,48)" fg:x="2934" fg:w="38"/><text x="28.1503%" y="191.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::is_valid_path (34 samples, 0.32%)</title><rect x="27.9384%" y="165" width="0.3233%" height="15" fill="rgb(238,224,15)" fg:x="2938" fg:w="34"/><text x="28.1884%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::room_group_matches (26 samples, 0.25%)</title><rect x="28.0145%" y="149" width="0.2472%" height="15" fill="rgb(241,136,10)" fg:x="2946" fg:w="26"/><text x="28.2645%" y="159.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Room::is_matching_type (12 samples, 0.11%)</title><rect x="28.1476%" y="133" width="0.1141%" height="15" fill="rgb(208,32,45)" fg:x="2960" fg:w="12"/><text x="28.3976%" y="143.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::adapters::filter::impl$2::next(core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (256 samples, 2.43%)</title><rect x="26.0746%" y="293" width="2.4344%" height="15" fill="rgb(207,135,9)" fg:x="2742" fg:w="256"/><text x="26.3246%" y="303.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::find(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (256 samples, 2.43%)</title><rect x="26.0746%" y="277" width="2.4344%" height="15" fill="rgb(206,86,44)" fg:x="2742" fg:w="256"/><text x="26.3246%" y="287.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`core::iter::adapters::filter::impl$2::try_fold(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$0&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,ref_mut$ (256 samples, 2.43%)</title><rect x="26.0746%" y="261" width="2.4344%" height="15" fill="rgb(245,177,15)" fg:x="2742" fg:w="256"/><text x="26.3246%" y="271.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::try_fold(core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,tuple$&lt;&gt; &gt; &gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$0,core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,ref_mut$ (256 samples, 2.43%)</title><rect x="26.0746%" y="245" width="2.4344%" height="15" fill="rgb(206,64,50)" fg:x="2742" fg:w="256"/><text x="26.3246%" y="255.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (26 samples, 0.25%)</title><rect x="28.2617%" y="229" width="0.2472%" height="15" fill="rgb(234,36,40)" fg:x="2972" fg:w="26"/><text x="28.5117%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;::post_inc_start (7 samples, 0.07%)</title><rect x="28.4424%" y="213" width="0.0666%" height="15" fill="rgb(213,64,8)" fg:x="2991" fg:w="7"/><text x="28.6924%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::add (7 samples, 0.07%)</title><rect x="28.4424%" y="197" width="0.0666%" height="15" fill="rgb(210,75,36)" fg:x="2991" fg:w="7"/><text x="28.6924%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::offset (7 samples, 0.07%)</title><rect x="28.4424%" y="181" width="0.0666%" height="15" fill="rgb(229,88,21)" fg:x="2991" fg:w="7"/><text x="28.6924%" y="191.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (259 samples, 2.46%)</title><rect x="26.0746%" y="309" width="2.4629%" height="15" fill="rgb(252,204,47)" fg:x="2742" fg:w="259"/><text x="26.3246%" y="319.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`enum2$&lt;core::option::Option&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;ref$ (3 samples, 0.03%)</title><rect x="28.5089%" y="293" width="0.0285%" height="15" fill="rgb(208,77,27)" fg:x="2998" fg:w="3"/><text x="28.7589%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ops::function::impls::impl$4::call_once (3 samples, 0.03%)</title><rect x="28.5089%" y="277" width="0.0285%" height="15" fill="rgb(221,76,26)" fg:x="2998" fg:w="3"/><text x="28.7589%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure$2 (3 samples, 0.03%)</title><rect x="28.5089%" y="261" width="0.0285%" height="15" fill="rgb(225,139,18)" fg:x="2998" fg:w="3"/><text x="28.7589%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (265 samples, 2.52%)</title><rect x="26.0650%" y="341" width="2.5200%" height="15" fill="rgb(230,137,11)" fg:x="2741" fg:w="265"/><text x="26.3150%" y="351.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (265 samples, 2.52%)</title><rect x="26.0650%" y="325" width="2.5200%" height="15" fill="rgb(212,28,1)" fg:x="2741" fg:w="265"/><text x="26.3150%" y="335.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::add (5 samples, 0.05%)</title><rect x="28.5375%" y="309" width="0.0475%" height="15" fill="rgb(248,164,17)" fg:x="3001" fg:w="5"/><text x="28.7875%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::PartialEq::ne (116 samples, 1.10%)</title><rect x="45.4355%" y="213" width="1.1031%" height="15" fill="rgb(222,171,42)" fg:x="4778" fg:w="116"/><text x="45.6855%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$19::eq (116 samples, 1.10%)</title><rect x="45.4355%" y="197" width="1.1031%" height="15" fill="rgb(243,84,45)" fg:x="4778" fg:w="116"/><text x="45.6855%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure$0 (2,355 samples, 22.39%)</title><rect x="28.5850%" y="245" width="22.3944%" height="15" fill="rgb(252,49,23)" fg:x="3006" fg:w="2355"/><text x="28.8350%" y="255.50">aoc_2021_rust_practice.exe`aoc_2021..</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::route_is_empty(ref$&lt;slice2$ (2,059 samples, 19.58%)</title><rect x="31.3998%" y="229" width="19.5797%" height="15" fill="rgb(215,19,7)" fg:x="3302" fg:w="2059"/><text x="31.6498%" y="239.50">aoc_2021_rust_practice.exe`aoc_..</text></g><g><title>aoc_2021_rust_practice.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (467 samples, 4.44%)</title><rect x="46.5386%" y="213" width="4.4409%" height="15" fill="rgb(238,81,41)" fg:x="4894" fg:w="467"/><text x="46.7886%" y="223.50">aoc_2..</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::amber_correct_below_room (8 samples, 0.08%)</title><rect x="52.1871%" y="165" width="0.0761%" height="15" fill="rgb(210,199,37)" fg:x="5488" fg:w="8"/><text x="52.4371%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::bronze_correct_below_room (8 samples, 0.08%)</title><rect x="52.2632%" y="165" width="0.0761%" height="15" fill="rgb(244,192,49)" fg:x="5496" fg:w="8"/><text x="52.5132%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::copper_correct_below_room (7 samples, 0.07%)</title><rect x="52.3393%" y="165" width="0.0666%" height="15" fill="rgb(226,211,11)" fg:x="5504" fg:w="7"/><text x="52.5893%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::desert_correct_below_room (12 samples, 0.11%)</title><rect x="52.4059%" y="165" width="0.1141%" height="15" fill="rgb(236,162,54)" fg:x="5511" fg:w="12"/><text x="52.6559%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::room_has_amphipod (4 samples, 0.04%)</title><rect x="52.4819%" y="149" width="0.0380%" height="15" fill="rgb(220,229,9)" fg:x="5519" fg:w="4"/><text x="52.7319%" y="159.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$19::eq (4 samples, 0.04%)</title><rect x="52.4819%" y="133" width="0.0380%" height="15" fill="rgb(250,87,22)" fg:x="5519" fg:w="4"/><text x="52.7319%" y="143.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::adapters::filter::filter_try_fold::closure$0(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,tuple$&lt;&gt; &gt; &gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$0,core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,ref_mut$&lt;aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$1&gt; &gt; &gt;*, tuple$ (2,597 samples, 24.70%)</title><rect x="28.5850%" y="261" width="24.6957%" height="15" fill="rgb(239,43,17)" fg:x="3006" fg:w="2597"/><text x="28.8350%" y="271.50">aoc_2021_rust_practice.exe`core::iter::..</text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::find::check::closure$0(core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,ref_mut$&lt;aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$1&gt; &gt;*, tuple$ (242 samples, 2.30%)</title><rect x="50.9795%" y="245" width="2.3013%" height="15" fill="rgb(231,177,25)" fg:x="5361" fg:w="242"/><text x="51.2295%" y="255.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`core::ops::function::impls::impl$3::call_mut (242 samples, 2.30%)</title><rect x="50.9795%" y="229" width="2.3013%" height="15" fill="rgb(219,179,1)" fg:x="5361" fg:w="242"/><text x="51.2295%" y="239.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure$1 (242 samples, 2.30%)</title><rect x="50.9795%" y="213" width="2.3013%" height="15" fill="rgb(238,219,53)" fg:x="5361" fg:w="242"/><text x="51.2295%" y="223.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::is_valid_path (215 samples, 2.04%)</title><rect x="51.2362%" y="197" width="2.0445%" height="15" fill="rgb(232,167,36)" fg:x="5388" fg:w="215"/><text x="51.4862%" y="207.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::room_group_matches (147 samples, 1.40%)</title><rect x="51.8828%" y="181" width="1.3979%" height="15" fill="rgb(244,19,51)" fg:x="5456" fg:w="147"/><text x="52.1328%" y="191.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Room::is_matching_type (80 samples, 0.76%)</title><rect x="52.5200%" y="165" width="0.7607%" height="15" fill="rgb(224,6,22)" fg:x="5523" fg:w="80"/><text x="52.7700%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::adapters::filter::impl$2::next(core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (2,897 samples, 27.55%)</title><rect x="28.5850%" y="325" width="27.5485%" height="15" fill="rgb(224,145,5)" fg:x="3006" fg:w="2897"/><text x="28.8350%" y="335.50">aoc_2021_rust_practice.exe`core::iter::adapt..</text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::find(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (2,897 samples, 27.55%)</title><rect x="28.5850%" y="309" width="27.5485%" height="15" fill="rgb(234,130,49)" fg:x="3006" fg:w="2897"/><text x="28.8350%" y="319.50">aoc_2021_rust_practice.exe`core::iter::trait..</text></g><g><title>aoc_2021_rust_practice.exe`core::iter::adapters::filter::impl$2::try_fold(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$0&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,ref_mut$ (2,897 samples, 27.55%)</title><rect x="28.5850%" y="293" width="27.5485%" height="15" fill="rgb(254,6,2)" fg:x="3006" fg:w="2897"/><text x="28.8350%" y="303.50">aoc_2021_rust_practice.exe`core::iter::adapt..</text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::try_fold(core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,tuple$&lt;&gt; &gt; &gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$0,core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,ref_mut$ (2,897 samples, 27.55%)</title><rect x="28.5850%" y="277" width="27.5485%" height="15" fill="rgb(208,96,46)" fg:x="3006" fg:w="2897"/><text x="28.8350%" y="287.50">aoc_2021_rust_practice.exe`core::iter::trait..</text></g><g><title>aoc_2021_rust_practice.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (300 samples, 2.85%)</title><rect x="53.2807%" y="261" width="2.8528%" height="15" fill="rgb(239,3,39)" fg:x="5603" fg:w="300"/><text x="53.5307%" y="271.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;::post_inc_start (101 samples, 0.96%)</title><rect x="55.1731%" y="245" width="0.9604%" height="15" fill="rgb(233,210,1)" fg:x="5802" fg:w="101"/><text x="55.4231%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::add (101 samples, 0.96%)</title><rect x="55.1731%" y="229" width="0.9604%" height="15" fill="rgb(244,137,37)" fg:x="5802" fg:w="101"/><text x="55.4231%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::offset (101 samples, 0.96%)</title><rect x="55.1731%" y="213" width="0.9604%" height="15" fill="rgb(240,136,2)" fg:x="5802" fg:w="101"/><text x="55.4231%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::append(alloc::vec::Vec (3,861 samples, 36.72%)</title><rect x="19.4466%" y="405" width="36.7155%" height="15" fill="rgb(239,18,37)" fg:x="2045" fg:w="3861"/><text x="19.6966%" y="415.50">aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_pra..</text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::as_slice (3,588 samples, 34.12%)</title><rect x="22.0426%" y="389" width="34.1194%" height="15" fill="rgb(218,185,22)" fg:x="2318" fg:w="3588"/><text x="22.2926%" y="399.50">aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rus..</text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;aoc_2021_rust_practice::solutions::day23_b::Move,core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$0&gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$1&gt;,aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure_env$2&gt; &gt;(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (3,561 samples, 33.86%)</title><rect x="22.2994%" y="373" width="33.8627%" height="15" fill="rgb(225,218,4)" fg:x="2345" fg:w="3561"/><text x="22.5494%" y="383.50">aoc_2021_rust_practice.exe`alloc::vec::spec_from_iter::..</text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (3,387 samples, 32.21%)</title><rect x="23.9540%" y="357" width="32.2081%" height="15" fill="rgb(230,182,32)" fg:x="2519" fg:w="3387"/><text x="24.2040%" y="367.50">aoc_2021_rust_practice.exe`alloc::vec::spec_from_ite..</text></g><g><title>aoc_2021_rust_practice.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (2,900 samples, 27.58%)</title><rect x="28.5850%" y="341" width="27.5770%" height="15" fill="rgb(242,56,43)" fg:x="3006" fg:w="2900"/><text x="28.8350%" y="351.50">aoc_2021_rust_practice.exe`core::iter::adapt..</text></g><g><title>aoc_2021_rust_practice.exe`enum2$&lt;core::option::Option&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;ref$ (3 samples, 0.03%)</title><rect x="56.1335%" y="325" width="0.0285%" height="15" fill="rgb(233,99,24)" fg:x="5903" fg:w="3"/><text x="56.3835%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ops::function::impls::impl$4::call_once (3 samples, 0.03%)</title><rect x="56.1335%" y="309" width="0.0285%" height="15" fill="rgb(234,209,42)" fg:x="5903" fg:w="3"/><text x="56.3835%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$2::get_valid_moves::closure$2 (3 samples, 0.03%)</title><rect x="56.1335%" y="293" width="0.0285%" height="15" fill="rgb(227,7,12)" fg:x="5903" fg:w="3"/><text x="56.3835%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::new (2 samples, 0.02%)</title><rect x="56.1620%" y="405" width="0.0190%" height="15" fill="rgb(245,203,43)" fg:x="5906" fg:w="2"/><text x="56.4120%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Room::from (13 samples, 0.12%)</title><rect x="56.1811%" y="405" width="0.1236%" height="15" fill="rgb(238,205,33)" fg:x="5908" fg:w="13"/><text x="56.4311%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$19::eq (12 samples, 0.11%)</title><rect x="56.3047%" y="405" width="0.1141%" height="15" fill="rgb(231,56,7)" fg:x="5921" fg:w="12"/><text x="56.5547%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::impls::impl$54::lt (6 samples, 0.06%)</title><rect x="56.5044%" y="373" width="0.0571%" height="15" fill="rgb(244,186,29)" fg:x="5942" fg:w="6"/><text x="56.7544%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::range::impl$12::next(core::ops::range::RangeInclusive (48 samples, 0.46%)</title><rect x="56.4188%" y="405" width="0.4564%" height="15" fill="rgb(234,111,31)" fg:x="5933" fg:w="48"/><text x="56.6688%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::range::impl$11::spec_next(core::ops::range::RangeInclusive (48 samples, 0.46%)</title><rect x="56.4188%" y="389" width="0.4564%" height="15" fill="rgb(241,149,10)" fg:x="5933" fg:w="48"/><text x="56.6688%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ops::range::RangeInclusive&lt;usize&gt;::is_empty (33 samples, 0.31%)</title><rect x="56.5614%" y="373" width="0.3138%" height="15" fill="rgb(249,206,44)" fg:x="5948" fg:w="33"/><text x="56.8114%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (39 samples, 0.37%)</title><rect x="56.8752%" y="405" width="0.3709%" height="15" fill="rgb(251,153,30)" fg:x="5981" fg:w="39"/><text x="57.1252%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::impl$17::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (39 samples, 0.37%)</title><rect x="56.8752%" y="389" width="0.3709%" height="15" fill="rgb(239,152,38)" fg:x="5981" fg:w="39"/><text x="57.1252%" y="399.50"></text></g><g><title>`0x7FFC8CA14760 (4 samples, 0.04%)</title><rect x="57.3222%" y="325" width="0.0380%" height="15" fill="rgb(249,139,47)" fg:x="6028" fg:w="4"/><text x="57.5722%" y="335.50"></text></g><g><title>`0x7FFC8CA14777 (2 samples, 0.02%)</title><rect x="57.3602%" y="325" width="0.0190%" height="15" fill="rgb(244,64,35)" fg:x="6032" fg:w="2"/><text x="57.6102%" y="335.50"></text></g><g><title>`0x7FFC8CA1571F (3 samples, 0.03%)</title><rect x="57.4173%" y="309" width="0.0285%" height="15" fill="rgb(216,46,15)" fg:x="6038" fg:w="3"/><text x="57.6673%" y="319.50"></text></g><g><title>`0x7FFC8CA15731 (2 samples, 0.02%)</title><rect x="57.4458%" y="309" width="0.0190%" height="15" fill="rgb(250,74,19)" fg:x="6041" fg:w="2"/><text x="57.6958%" y="319.50"></text></g><g><title>`0x7FFC8CA15B9C (2 samples, 0.02%)</title><rect x="57.5219%" y="309" width="0.0190%" height="15" fill="rgb(249,42,33)" fg:x="6049" fg:w="2"/><text x="57.7719%" y="319.50"></text></g><g><title>`0x7FFC8CA15BBB (2 samples, 0.02%)</title><rect x="57.5504%" y="309" width="0.0190%" height="15" fill="rgb(242,149,17)" fg:x="6052" fg:w="2"/><text x="57.8004%" y="319.50"></text></g><g><title>`0x7FFC8CA15BC9 (3 samples, 0.03%)</title><rect x="57.5694%" y="309" width="0.0285%" height="15" fill="rgb(244,29,21)" fg:x="6054" fg:w="3"/><text x="57.8194%" y="319.50"></text></g><g><title>`0x7FFC8CA96FEA (4 samples, 0.04%)</title><rect x="57.6170%" y="309" width="0.0380%" height="15" fill="rgb(220,130,37)" fg:x="6059" fg:w="4"/><text x="57.8670%" y="319.50"></text></g><g><title>`0x7FFC8CA96FFB (4 samples, 0.04%)</title><rect x="57.6550%" y="309" width="0.0380%" height="15" fill="rgb(211,67,2)" fg:x="6063" fg:w="4"/><text x="57.9050%" y="319.50"></text></g><g><title>`0x7FFC8CA9700C (2 samples, 0.02%)</title><rect x="57.7025%" y="309" width="0.0190%" height="15" fill="rgb(235,68,52)" fg:x="6068" fg:w="2"/><text x="57.9525%" y="319.50"></text></g><g><title>`0x7FFC8CA97018 (8 samples, 0.08%)</title><rect x="57.7216%" y="309" width="0.0761%" height="15" fill="rgb(246,142,3)" fg:x="6070" fg:w="8"/><text x="57.9716%" y="319.50"></text></g><g><title>`0x7FFC8CA97023 (15 samples, 0.14%)</title><rect x="57.7976%" y="309" width="0.1426%" height="15" fill="rgb(241,25,7)" fg:x="6078" fg:w="15"/><text x="58.0476%" y="319.50"></text></g><g><title>`0x7FFC8CA97026 (2 samples, 0.02%)</title><rect x="57.9403%" y="309" width="0.0190%" height="15" fill="rgb(242,119,39)" fg:x="6093" fg:w="2"/><text x="58.1903%" y="319.50"></text></g><g><title>`0x7FFC8CA9702E (2 samples, 0.02%)</title><rect x="57.9593%" y="309" width="0.0190%" height="15" fill="rgb(241,98,45)" fg:x="6095" fg:w="2"/><text x="58.2093%" y="319.50"></text></g><g><title>`0x7FFC8CA9703C (5 samples, 0.05%)</title><rect x="57.9878%" y="309" width="0.0475%" height="15" fill="rgb(254,28,30)" fg:x="6098" fg:w="5"/><text x="58.2378%" y="319.50"></text></g><g><title>`0x7FFC8CA9703F (3 samples, 0.03%)</title><rect x="58.0354%" y="309" width="0.0285%" height="15" fill="rgb(241,142,54)" fg:x="6103" fg:w="3"/><text x="58.2854%" y="319.50"></text></g><g><title>`0x7FFC8CA97042 (3 samples, 0.03%)</title><rect x="58.0639%" y="309" width="0.0285%" height="15" fill="rgb(222,85,15)" fg:x="6106" fg:w="3"/><text x="58.3139%" y="319.50"></text></g><g><title>`0x7FFC8CA97054 (2 samples, 0.02%)</title><rect x="58.0924%" y="309" width="0.0190%" height="15" fill="rgb(210,85,47)" fg:x="6109" fg:w="2"/><text x="58.3424%" y="319.50"></text></g><g><title>`0x7FFC8CA970EA (13 samples, 0.12%)</title><rect x="58.1114%" y="309" width="0.1236%" height="15" fill="rgb(224,206,25)" fg:x="6111" fg:w="13"/><text x="58.3614%" y="319.50"></text></g><g><title>`0x7FFC8CA97105 (3 samples, 0.03%)</title><rect x="58.2351%" y="309" width="0.0285%" height="15" fill="rgb(243,201,19)" fg:x="6124" fg:w="3"/><text x="58.4851%" y="319.50"></text></g><g><title>`0x7FFC8CA9716B (3 samples, 0.03%)</title><rect x="58.2636%" y="309" width="0.0285%" height="15" fill="rgb(236,59,4)" fg:x="6127" fg:w="3"/><text x="58.5136%" y="319.50"></text></g><g><title>`0x7FFC8CA147B1 (98 samples, 0.93%)</title><rect x="57.3887%" y="325" width="0.9319%" height="15" fill="rgb(254,179,45)" fg:x="6035" fg:w="98"/><text x="57.6387%" y="335.50"></text></g><g><title>`0x7FFC8CA97185 (3 samples, 0.03%)</title><rect x="58.2921%" y="309" width="0.0285%" height="15" fill="rgb(226,14,10)" fg:x="6130" fg:w="3"/><text x="58.5421%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (108 samples, 1.03%)</title><rect x="57.3127%" y="357" width="1.0270%" height="15" fill="rgb(244,27,41)" fg:x="6027" fg:w="108"/><text x="57.5627%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::alloc::dealloc (108 samples, 1.03%)</title><rect x="57.3127%" y="341" width="1.0270%" height="15" fill="rgb(235,35,32)" fg:x="6027" fg:w="108"/><text x="57.5627%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::drop_in_place(alloc::vec::Vec (119 samples, 1.13%)</title><rect x="57.2461%" y="405" width="1.1316%" height="15" fill="rgb(218,68,31)" fg:x="6020" fg:w="119"/><text x="57.4961%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (119 samples, 1.13%)</title><rect x="57.2461%" y="389" width="1.1316%" height="15" fill="rgb(207,120,37)" fg:x="6020" fg:w="119"/><text x="57.4961%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (119 samples, 1.13%)</title><rect x="57.2461%" y="373" width="1.1316%" height="15" fill="rgb(227,98,0)" fg:x="6020" fg:w="119"/><text x="57.4961%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Move,alloc::alloc::Global&gt;::current_memory (4 samples, 0.04%)</title><rect x="58.3397%" y="357" width="0.0380%" height="15" fill="rgb(207,7,3)" fg:x="6135" fg:w="4"/><text x="58.5897%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::impl$0::iter(ref$&lt;slice2$ (40 samples, 0.38%)</title><rect x="58.3777%" y="405" width="0.3804%" height="15" fill="rgb(206,98,19)" fg:x="6139" fg:w="40"/><text x="58.6277%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Path&gt;::new(ref$&lt;slice2$ (40 samples, 0.38%)</title><rect x="58.3777%" y="389" width="0.3804%" height="15" fill="rgb(217,5,26)" fg:x="6139" fg:w="40"/><text x="58.6277%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::const_ptr::impl$0::add (40 samples, 0.38%)</title><rect x="58.3777%" y="373" width="0.3804%" height="15" fill="rgb(235,190,38)" fg:x="6139" fg:w="40"/><text x="58.6277%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::const_ptr::impl$0::offset (40 samples, 0.38%)</title><rect x="58.3777%" y="357" width="0.3804%" height="15" fill="rgb(247,86,24)" fg:x="6139" fg:w="40"/><text x="58.6277%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::impls::impl$5::hash (25 samples, 0.24%)</title><rect x="59.5474%" y="341" width="0.2377%" height="15" fill="rgb(205,101,16)" fg:x="6262" fg:w="25"/><text x="59.7974%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$15::hash (25 samples, 0.24%)</title><rect x="59.5474%" y="325" width="0.2377%" height="15" fill="rgb(246,168,33)" fg:x="6262" fg:w="25"/><text x="59.7974%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::impls::impl$18::hash (9 samples, 0.09%)</title><rect x="59.6995%" y="309" width="0.0856%" height="15" fill="rgb(231,114,1)" fg:x="6278" fg:w="9"/><text x="59.9495%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hasher::write_isize (9 samples, 0.09%)</title><rect x="59.6995%" y="293" width="0.0856%" height="15" fill="rgb(207,184,53)" fg:x="6278" fg:w="9"/><text x="59.9495%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$83::build_hasher (61 samples, 0.58%)</title><rect x="59.7851%" y="341" width="0.5801%" height="15" fill="rgb(224,95,51)" fg:x="6287" fg:w="61"/><text x="60.0351%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::SipHasher13::new_with_keys (21 samples, 0.20%)</title><rect x="60.1655%" y="325" width="0.1997%" height="15" fill="rgb(212,188,45)" fg:x="6327" fg:w="21"/><text x="60.4155%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::new_with_keys (21 samples, 0.20%)</title><rect x="60.1655%" y="309" width="0.1997%" height="15" fill="rgb(223,154,38)" fg:x="6327" fg:w="21"/><text x="60.4155%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::reset (15 samples, 0.14%)</title><rect x="60.2225%" y="293" width="0.1426%" height="15" fill="rgb(251,22,52)" fg:x="6333" fg:w="15"/><text x="60.4725%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$12::to_ne_bytes (29 samples, 0.28%)</title><rect x="62.9041%" y="277" width="0.2758%" height="15" fill="rgb(229,209,22)" fg:x="6615" fg:w="29"/><text x="63.1541%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::rotate_left (76 samples, 0.72%)</title><rect x="65.2339%" y="213" width="0.7227%" height="15" fill="rgb(234,138,34)" fg:x="6860" fg:w="76"/><text x="65.4839%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::c_rounds (148 samples, 1.41%)</title><rect x="64.8536%" y="229" width="1.4074%" height="15" fill="rgb(212,95,11)" fg:x="6820" fg:w="148"/><text x="65.1036%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (32 samples, 0.30%)</title><rect x="65.9566%" y="213" width="0.3043%" height="15" fill="rgb(240,179,47)" fg:x="6936" fg:w="32"/><text x="66.2066%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt; (451 samples, 4.29%)</title><rect x="62.1719%" y="293" width="4.2887%" height="15" fill="rgb(240,163,11)" fg:x="6538" fg:w="451"/><text x="62.4219%" y="303.50">aoc_2..</text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::write(std::collections::hash::map::DefaultHasher*, ref$&lt;slice2$ (345 samples, 3.28%)</title><rect x="63.1799%" y="277" width="3.2807%" height="15" fill="rgb(236,37,12)" fg:x="6644" fg:w="345"/><text x="63.4299%" y="287.50">aoc..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (345 samples, 3.28%)</title><rect x="63.1799%" y="261" width="3.2807%" height="15" fill="rgb(232,164,16)" fg:x="6644" fg:w="345"/><text x="63.4299%" y="271.50">aoc..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (345 samples, 3.28%)</title><rect x="63.1799%" y="245" width="3.2807%" height="15" fill="rgb(244,205,15)" fg:x="6644" fg:w="345"/><text x="63.4299%" y="255.50">aoc..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (21 samples, 0.20%)</title><rect x="66.2609%" y="229" width="0.1997%" height="15" fill="rgb(223,117,47)" fg:x="6968" fg:w="21"/><text x="66.5109%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::rotate_left (89 samples, 0.85%)</title><rect x="66.7935%" y="277" width="0.8463%" height="15" fill="rgb(244,107,35)" fg:x="7024" fg:w="89"/><text x="67.0435%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::c_rounds (167 samples, 1.59%)</title><rect x="66.4606%" y="293" width="1.5881%" height="15" fill="rgb(205,140,8)" fg:x="6989" fg:w="167"/><text x="66.7106%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (43 samples, 0.41%)</title><rect x="67.6398%" y="277" width="0.4089%" height="15" fill="rgb(228,84,46)" fg:x="7113" fg:w="43"/><text x="67.8898%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::rotate_left (263 samples, 2.50%)</title><rect x="68.7714%" y="277" width="2.5010%" height="15" fill="rgb(254,188,9)" fg:x="7232" fg:w="263"/><text x="69.0214%" y="287.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Room&gt; &gt; (1,364 samples, 12.97%)</title><rect x="59.0053%" y="357" width="12.9707%" height="15" fill="rgb(206,112,54)" fg:x="6205" fg:w="1364"/><text x="59.2553%" y="367.50">aoc_2021_rust_pract..</text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::finish (1,221 samples, 11.61%)</title><rect x="60.3652%" y="341" width="11.6109%" height="15" fill="rgb(216,84,49)" fg:x="6348" fg:w="1221"/><text x="60.6152%" y="351.50">aoc_2021_rust_pra..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::finish (1,221 samples, 11.61%)</title><rect x="60.3652%" y="325" width="11.6109%" height="15" fill="rgb(214,194,35)" fg:x="6348" fg:w="1221"/><text x="60.6152%" y="335.50">aoc_2021_rust_pra..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1,221 samples, 11.61%)</title><rect x="60.3652%" y="309" width="11.6109%" height="15" fill="rgb(249,28,3)" fg:x="6348" fg:w="1221"/><text x="60.6152%" y="319.50">aoc_2021_rust_pra..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::d_rounds (413 samples, 3.93%)</title><rect x="68.0487%" y="293" width="3.9273%" height="15" fill="rgb(222,56,52)" fg:x="7156" fg:w="413"/><text x="68.2987%" y="303.50">aoc_..</text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (74 samples, 0.70%)</title><rect x="71.2723%" y="277" width="0.7037%" height="15" fill="rgb(245,217,50)" fg:x="7495" fg:w="74"/><text x="71.5223%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::map::make_hash (8 samples, 0.08%)</title><rect x="71.9760%" y="357" width="0.0761%" height="15" fill="rgb(213,201,24)" fg:x="7569" fg:w="8"/><text x="72.2260%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::bitmask::impl$2::next (89 samples, 0.85%)</title><rect x="75.2853%" y="309" width="0.8463%" height="15" fill="rgb(248,116,28)" fg:x="7917" fg:w="89"/><text x="75.5353%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (58 samples, 0.55%)</title><rect x="75.5801%" y="293" width="0.5515%" height="15" fill="rgb(219,72,43)" fg:x="7948" fg:w="58"/><text x="75.8301%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::h2 (211 samples, 2.01%)</title><rect x="76.1316%" y="309" width="2.0065%" height="15" fill="rgb(209,138,14)" fg:x="8006" fg:w="211"/><text x="76.3816%" y="319.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::impl$7::find::closure$0(hashbrown::raw::impl$7::find::closure_env$0&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Path,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Room,aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec (78 samples, 0.74%)</title><rect x="78.1381%" y="309" width="0.7417%" height="15" fill="rgb(222,18,33)" fg:x="8217" fg:w="78"/><text x="78.3881%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::Bucket&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Path,alloc::alloc::Global&gt; &gt; &gt;::as_ref (77 samples, 0.73%)</title><rect x="78.1476%" y="293" width="0.7322%" height="15" fill="rgb(213,199,7)" fg:x="8218" fg:w="77"/><text x="78.3976%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::Bucket&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Path,alloc::alloc::Global&gt; &gt; &gt;::as_ptr (77 samples, 0.73%)</title><rect x="78.1476%" y="277" width="0.7322%" height="15" fill="rgb(250,110,10)" fg:x="8218" fg:w="77"/><text x="78.3976%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec (77 samples, 0.73%)</title><rect x="78.1476%" y="261" width="0.7322%" height="15" fill="rgb(248,123,6)" fg:x="8218" fg:w="77"/><text x="78.3976%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::offset(tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec (77 samples, 0.73%)</title><rect x="78.1476%" y="245" width="0.7322%" height="15" fill="rgb(206,91,31)" fg:x="8218" fg:w="77"/><text x="78.3976%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::get_valid_moves(std::collections::hash::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec (6,349 samples, 60.37%)</title><rect x="19.1137%" y="421" width="60.3747%" height="15" fill="rgb(211,154,13)" fg:x="2010" fg:w="6349"/><text x="19.3637%" y="431.50">aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::get_valid_moves(std::co..</text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Path,alloc::alloc::Global&gt;,std::collections::hash::map::RandomState&gt;::get (2,180 samples, 20.73%)</title><rect x="58.7581%" y="405" width="20.7303%" height="15" fill="rgb(225,148,7)" fg:x="6179" fg:w="2180"/><text x="59.0081%" y="415.50">aoc_2021_rust_practice.exe`std::c..</text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Path,alloc::alloc::Global&gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get (2,180 samples, 20.73%)</title><rect x="58.7581%" y="389" width="20.7303%" height="15" fill="rgb(220,160,43)" fg:x="6179" fg:w="2180"/><text x="59.0081%" y="399.50">aoc_2021_rust_practice.exe`hashbr..</text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Path,alloc::alloc::Global&gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get_inner (2,180 samples, 20.73%)</title><rect x="58.7581%" y="373" width="20.7303%" height="15" fill="rgb(213,52,39)" fg:x="6179" fg:w="2180"/><text x="59.0081%" y="383.50">aoc_2021_rust_practice.exe`hashbr..</text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTable&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Path,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Room,aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec (782 samples, 7.44%)</title><rect x="72.0521%" y="357" width="7.4363%" height="15" fill="rgb(243,137,7)" fg:x="7577" fg:w="782"/><text x="72.3021%" y="367.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTable&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Path,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Room,aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec (782 samples, 7.44%)</title><rect x="72.0521%" y="341" width="7.4363%" height="15" fill="rgb(230,79,13)" fg:x="7577" fg:w="782"/><text x="72.3021%" y="351.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (782 samples, 7.44%)</title><rect x="72.0521%" y="325" width="7.4363%" height="15" fill="rgb(247,105,23)" fg:x="7577" fg:w="782"/><text x="72.3021%" y="335.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::sse2::Group::match_byte (64 samples, 0.61%)</title><rect x="78.8798%" y="309" width="0.6086%" height="15" fill="rgb(223,179,41)" fg:x="8295" fg:w="64"/><text x="79.1298%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (64 samples, 0.61%)</title><rect x="78.8798%" y="293" width="0.6086%" height="15" fill="rgb(218,9,34)" fg:x="8295" fg:w="64"/><text x="79.1298%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::Bucket&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt; &gt;::write(tuple$ (10 samples, 0.10%)</title><rect x="79.5359%" y="373" width="0.0951%" height="15" fill="rgb(222,106,8)" fg:x="8364" fg:w="10"/><text x="79.7859%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;*, tuple$ (10 samples, 0.10%)</title><rect x="79.5359%" y="357" width="0.0951%" height="15" fill="rgb(211,220,0)" fg:x="8364" fg:w="10"/><text x="79.7859%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::write(tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;*, tuple$ (10 samples, 0.10%)</title><rect x="79.5359%" y="341" width="0.0951%" height="15" fill="rgb(229,52,16)" fg:x="8364" fg:w="10"/><text x="79.7859%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::intrinsics::copy_nonoverlapping (31 samples, 0.29%)</title><rect x="79.6310%" y="325" width="0.2948%" height="15" fill="rgb(212,155,18)" fg:x="8374" fg:w="31"/><text x="79.8810%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::drop_in_place(hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::impl$11::prepare_resize::closure_env$0 (3 samples, 0.03%)</title><rect x="79.9353%" y="325" width="0.0285%" height="15" fill="rgb(242,21,14)" fg:x="8406" fg:w="3"/><text x="80.1853%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::scopeguard::impl$3::drop(hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::impl$11::prepare_resize::closure_env$0 (3 samples, 0.03%)</title><rect x="79.9353%" y="309" width="0.0285%" height="15" fill="rgb(222,19,48)" fg:x="8406" fg:w="3"/><text x="80.1853%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::impl$11::prepare_resize::closure$0(hashbrown::raw::impl$11::prepare_resize::closure_env$0&lt;alloc::alloc::Global&gt;*, hashbrown::raw::RawTableInner (3 samples, 0.03%)</title><rect x="79.9353%" y="293" width="0.0285%" height="15" fill="rgb(232,45,27)" fg:x="8406" fg:w="3"/><text x="80.1853%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::free_buckets (3 samples, 0.03%)</title><rect x="79.9353%" y="277" width="0.0285%" height="15" fill="rgb(249,103,42)" fg:x="8406" fg:w="3"/><text x="80.1853%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.03%)</title><rect x="79.9353%" y="261" width="0.0285%" height="15" fill="rgb(246,81,33)" fg:x="8406" fg:w="3"/><text x="80.1853%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="79.9353%" y="245" width="0.0285%" height="15" fill="rgb(252,33,42)" fg:x="8406" fg:w="3"/><text x="80.1853%" y="255.50"></text></g><g><title>`0x7FFC8CA147B1 (3 samples, 0.03%)</title><rect x="79.9353%" y="229" width="0.0285%" height="15" fill="rgb(209,212,41)" fg:x="8406" fg:w="3"/><text x="80.1853%" y="239.50"></text></g><g><title>`0x7FFC8CA15B74 (3 samples, 0.03%)</title><rect x="79.9353%" y="213" width="0.0285%" height="15" fill="rgb(207,154,6)" fg:x="8406" fg:w="3"/><text x="80.1853%" y="223.50"></text></g><g><title>`0x7FFC8CA16F37 (3 samples, 0.03%)</title><rect x="79.9353%" y="197" width="0.0285%" height="15" fill="rgb(223,64,47)" fg:x="8406" fg:w="3"/><text x="80.1853%" y="207.50"></text></g><g><title>`0x7FFC8C9F9B1A (3 samples, 0.03%)</title><rect x="79.9353%" y="181" width="0.0285%" height="15" fill="rgb(211,161,38)" fg:x="8406" fg:w="3"/><text x="80.1853%" y="191.50"></text></g><g><title>`0x7FFC8CA8D474 (3 samples, 0.03%)</title><rect x="79.9353%" y="165" width="0.0285%" height="15" fill="rgb(219,138,40)" fg:x="8406" fg:w="3"/><text x="80.1853%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::rotate_left (2 samples, 0.02%)</title><rect x="80.5915%" y="37" width="0.0190%" height="15" fill="rgb(241,228,46)" fg:x="8475" fg:w="2"/><text x="80.8415%" y="47.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::c_rounds (47 samples, 0.45%)</title><rect x="80.2016%" y="53" width="0.4469%" height="15" fill="rgb(223,209,38)" fg:x="8434" fg:w="47"/><text x="80.4516%" y="63.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (4 samples, 0.04%)</title><rect x="80.6105%" y="37" width="0.0380%" height="15" fill="rgb(236,164,45)" fg:x="8477" fg:w="4"/><text x="80.8605%" y="47.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$7::hash&lt;std::collections::hash::map::DefaultHasher&gt; (74 samples, 0.70%)</title><rect x="80.0114%" y="213" width="0.7037%" height="15" fill="rgb(231,15,5)" fg:x="8414" fg:w="74"/><text x="80.2614%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::array::impl$12::hash (74 samples, 0.70%)</title><rect x="80.0114%" y="197" width="0.7037%" height="15" fill="rgb(252,35,15)" fg:x="8414" fg:w="74"/><text x="80.2614%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (74 samples, 0.70%)</title><rect x="80.0114%" y="181" width="0.7037%" height="15" fill="rgb(248,181,18)" fg:x="8414" fg:w="74"/><text x="80.2614%" y="191.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hash::hash_slice(ref$&lt;slice2$ (74 samples, 0.70%)</title><rect x="80.0114%" y="165" width="0.7037%" height="15" fill="rgb(233,39,42)" fg:x="8414" fg:w="74"/><text x="80.2614%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hash::hash_slice::rt(ref$&lt;slice2$ (74 samples, 0.70%)</title><rect x="80.0114%" y="149" width="0.7037%" height="15" fill="rgb(238,110,33)" fg:x="8414" fg:w="74"/><text x="80.2614%" y="159.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$23::hash (74 samples, 0.70%)</title><rect x="80.0114%" y="133" width="0.7037%" height="15" fill="rgb(233,195,10)" fg:x="8414" fg:w="74"/><text x="80.2614%" y="143.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt; (73 samples, 0.69%)</title><rect x="80.0209%" y="117" width="0.6942%" height="15" fill="rgb(254,105,3)" fg:x="8415" fg:w="73"/><text x="80.2709%" y="127.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::write(std::collections::hash::map::DefaultHasher*, ref$&lt;slice2$ (59 samples, 0.56%)</title><rect x="80.1541%" y="101" width="0.5610%" height="15" fill="rgb(221,225,9)" fg:x="8429" fg:w="59"/><text x="80.4041%" y="111.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (59 samples, 0.56%)</title><rect x="80.1541%" y="85" width="0.5610%" height="15" fill="rgb(224,227,45)" fg:x="8429" fg:w="59"/><text x="80.4041%" y="95.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (59 samples, 0.56%)</title><rect x="80.1541%" y="69" width="0.5610%" height="15" fill="rgb(229,198,43)" fg:x="8429" fg:w="59"/><text x="80.4041%" y="79.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (7 samples, 0.07%)</title><rect x="80.6485%" y="53" width="0.0666%" height="15" fill="rgb(206,209,35)" fg:x="8481" fg:w="7"/><text x="80.8985%" y="63.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt; (3 samples, 0.03%)</title><rect x="80.7151%" y="213" width="0.0285%" height="15" fill="rgb(245,195,53)" fg:x="8488" fg:w="3"/><text x="80.9651%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::write(std::collections::hash::map::DefaultHasher*, ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="80.7151%" y="197" width="0.0285%" height="15" fill="rgb(240,92,26)" fg:x="8488" fg:w="3"/><text x="80.9651%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="80.7151%" y="181" width="0.0285%" height="15" fill="rgb(207,40,23)" fg:x="8488" fg:w="3"/><text x="80.9651%" y="191.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="80.7151%" y="165" width="0.0285%" height="15" fill="rgb(223,111,35)" fg:x="8488" fg:w="3"/><text x="80.9651%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::probe_seq (82 samples, 0.78%)</title><rect x="79.9924%" y="293" width="0.7798%" height="15" fill="rgb(229,147,28)" fg:x="8412" fg:w="82"/><text x="80.2424%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt; &gt; (82 samples, 0.78%)</title><rect x="79.9924%" y="277" width="0.7798%" height="15" fill="rgb(211,29,28)" fg:x="8412" fg:w="82"/><text x="80.2424%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::finish (81 samples, 0.77%)</title><rect x="80.0019%" y="261" width="0.7703%" height="15" fill="rgb(228,72,33)" fg:x="8413" fg:w="81"/><text x="80.2519%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::finish (81 samples, 0.77%)</title><rect x="80.0019%" y="245" width="0.7703%" height="15" fill="rgb(205,214,31)" fg:x="8413" fg:w="81"/><text x="80.2519%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (81 samples, 0.77%)</title><rect x="80.0019%" y="229" width="0.7703%" height="15" fill="rgb(224,111,15)" fg:x="8413" fg:w="81"/><text x="80.2519%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::d_rounds (2 samples, 0.02%)</title><rect x="80.7531%" y="213" width="0.0190%" height="15" fill="rgb(253,21,26)" fg:x="8492" fg:w="2"/><text x="81.0031%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::is_full (2 samples, 0.02%)</title><rect x="80.7722%" y="293" width="0.0190%" height="15" fill="rgb(245,139,43)" fg:x="8494" fg:w="2"/><text x="81.0222%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_insert_slot (89 samples, 0.85%)</title><rect x="79.9639%" y="325" width="0.8463%" height="15" fill="rgb(252,170,7)" fg:x="8409" fg:w="89"/><text x="80.2139%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_insert_slot (89 samples, 0.85%)</title><rect x="79.9639%" y="309" width="0.8463%" height="15" fill="rgb(231,118,14)" fg:x="8409" fg:w="89"/><text x="80.2139%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.02%)</title><rect x="80.7912%" y="293" width="0.0190%" height="15" fill="rgb(238,83,0)" fg:x="8496" fg:w="2"/><text x="81.0412%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTable&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,aoc_2021_rust_practice::solutions::day23_b::Grid,usize,std::collections::hash::map::RandomState&gt; &gt;(unsigned long long, hashbrown::map::make_hasher::closure_env$0 (126 samples, 1.20%)</title><rect x="79.6310%" y="373" width="1.1982%" height="15" fill="rgb(221,39,39)" fg:x="8374" fg:w="126"/><text x="79.8810%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::reserve_rehash_inner(unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt; &gt;,usize&gt;,assoc$&lt;Output,u64&gt; &gt; &gt; &gt;, hashbrown::raw::Fallibility, hashbrown::raw::TableLayout, enum2$&lt;core::option::Option&lt;void (*)(ptr_mut$ (126 samples, 1.20%)</title><rect x="79.6310%" y="357" width="1.1982%" height="15" fill="rgb(222,119,46)" fg:x="8374" fg:w="126"/><text x="79.8810%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::resize_inner(unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt; &gt;,usize&gt;,assoc$ (126 samples, 1.20%)</title><rect x="79.6310%" y="341" width="1.1982%" height="15" fill="rgb(222,165,49)" fg:x="8374" fg:w="126"/><text x="79.8810%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize (2 samples, 0.02%)</title><rect x="80.8102%" y="325" width="0.0190%" height="15" fill="rgb(219,113,52)" fg:x="8498" fg:w="2"/><text x="81.0602%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::Grid::is_solved (144 samples, 1.37%)</title><rect x="79.4884%" y="421" width="1.3693%" height="15" fill="rgb(214,7,15)" fg:x="8359" fg:w="144"/><text x="79.7384%" y="431.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$19::eq (140 samples, 1.33%)</title><rect x="79.5264%" y="405" width="1.3313%" height="15" fill="rgb(235,32,4)" fg:x="8363" fg:w="140"/><text x="79.7764%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTable&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global&gt;::insert&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,aoc_2021_rust_practice::solutions::day23_b::Grid,usize,std::collections::hash::map::RandomState&gt; &gt;(unsigned long long, tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;, hashbrown::map::make_hasher::closure_env$0 (139 samples, 1.32%)</title><rect x="79.5359%" y="389" width="1.3218%" height="15" fill="rgb(238,90,54)" fg:x="8364" fg:w="139"/><text x="79.7859%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_insert_slot (3 samples, 0.03%)</title><rect x="80.8292%" y="373" width="0.0285%" height="15" fill="rgb(213,208,19)" fg:x="8500" fg:w="3"/><text x="81.0792%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$&lt;tuple$ (2 samples, 0.02%)</title><rect x="80.8863%" y="357" width="0.0190%" height="15" fill="rgb(233,156,4)" fg:x="8506" fg:w="2"/><text x="81.1363%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$&lt;tuple$ (2 samples, 0.02%)</title><rect x="80.8863%" y="341" width="0.0190%" height="15" fill="rgb(207,194,5)" fg:x="8506" fg:w="2"/><text x="81.1363%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$&lt;tuple$ (2 samples, 0.02%)</title><rect x="80.8863%" y="325" width="0.0190%" height="15" fill="rgb(206,111,30)" fg:x="8506" fg:w="2"/><text x="81.1363%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$&lt;tuple$ (2 samples, 0.02%)</title><rect x="80.8863%" y="309" width="0.0190%" height="15" fill="rgb(243,70,54)" fg:x="8506" fg:w="2"/><text x="81.1363%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,usize&gt;,alloc::alloc::Global&gt;::set_len (2 samples, 0.02%)</title><rect x="80.8863%" y="293" width="0.0190%" height="15" fill="rgb(242,28,8)" fg:x="8506" fg:w="2"/><text x="81.1363%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::find_path (7 samples, 0.07%)</title><rect x="80.8577%" y="405" width="0.0666%" height="15" fill="rgb(219,106,18)" fg:x="8503" fg:w="7"/><text x="81.1077%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::iter::impl$181::for_each(core::slice::iter::Iter&lt;tuple$ (4 samples, 0.04%)</title><rect x="80.8863%" y="389" width="0.0380%" height="15" fill="rgb(244,222,10)" fg:x="8506" fg:w="4"/><text x="81.1363%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::find_path::closure$1(aoc_2021_rust_practice::solutions::day23_b::find_path::closure_env$1*, tuple$ (4 samples, 0.04%)</title><rect x="80.8863%" y="373" width="0.0380%" height="15" fill="rgb(236,179,52)" fg:x="8506" fg:w="4"/><text x="81.1363%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,usize&gt;,alloc::alloc::Global&gt;::push(tuple$ (2 samples, 0.02%)</title><rect x="80.9053%" y="357" width="0.0190%" height="15" fill="rgb(213,23,39)" fg:x="8508" fg:w="2"/><text x="81.1553%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::Vec&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,usize&gt;,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="80.9053%" y="341" width="0.0190%" height="15" fill="rgb(238,48,10)" fg:x="8508" fg:w="2"/><text x="81.1553%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,usize&gt;,alloc::alloc::Global&gt;::ptr (2 samples, 0.02%)</title><rect x="80.9053%" y="325" width="0.0190%" height="15" fill="rgb(251,196,23)" fg:x="8508" fg:w="2"/><text x="81.1553%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,usize&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,usize&gt;,alloc::alloc::Global&gt; (2 samples, 0.02%)</title><rect x="80.9053%" y="309" width="0.0190%" height="15" fill="rgb(250,152,24)" fg:x="8508" fg:w="2"/><text x="81.1553%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Room,usize&gt;,alloc::alloc::Global&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="80.9053%" y="293" width="0.0190%" height="15" fill="rgb(209,150,17)" fg:x="8508" fg:w="2"/><text x="81.1553%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.02%)</title><rect x="80.9053%" y="277" width="0.0190%" height="15" fill="rgb(234,202,34)" fg:x="8508" fg:w="2"/><text x="81.1553%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.02%)</title><rect x="80.9053%" y="261" width="0.0190%" height="15" fill="rgb(253,148,53)" fg:x="8508" fg:w="2"/><text x="81.1553%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (2 samples, 0.02%)</title><rect x="80.9053%" y="245" width="0.0190%" height="15" fill="rgb(218,129,16)" fg:x="8508" fg:w="2"/><text x="81.1553%" y="255.50"></text></g><g><title>`0x7FFC8CA136BD (2 samples, 0.02%)</title><rect x="80.9053%" y="229" width="0.0190%" height="15" fill="rgb(216,85,19)" fg:x="8508" fg:w="2"/><text x="81.1553%" y="239.50"></text></g><g><title>`0x7FFC8CA138E3 (2 samples, 0.02%)</title><rect x="80.9053%" y="213" width="0.0190%" height="15" fill="rgb(235,228,7)" fg:x="8508" fg:w="2"/><text x="81.1553%" y="223.50"></text></g><g><title>`0x7FFC8CA11C4F (2 samples, 0.02%)</title><rect x="80.9053%" y="197" width="0.0190%" height="15" fill="rgb(245,175,0)" fg:x="8508" fg:w="2"/><text x="81.1553%" y="207.50"></text></g><g><title>`0x7FFC8CA147B1 (2 samples, 0.02%)</title><rect x="80.9053%" y="181" width="0.0190%" height="15" fill="rgb(208,168,36)" fg:x="8508" fg:w="2"/><text x="81.1553%" y="191.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::get_path_map (9 samples, 0.09%)</title><rect x="80.8577%" y="421" width="0.0856%" height="15" fill="rgb(246,171,24)" fg:x="8503" fg:w="9"/><text x="81.1077%" y="431.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Room,alloc::vec::Vec&lt;aoc_2021_rust_practice::solutions::day23_b::Path,alloc::alloc::Global&gt;,std::collections::hash::map::RandomState&gt;::new (2 samples, 0.02%)</title><rect x="80.9243%" y="405" width="0.0190%" height="15" fill="rgb(215,142,24)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$8::default (2 samples, 0.02%)</title><rect x="80.9243%" y="389" width="0.0190%" height="15" fill="rgb(250,187,7)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$87::default (2 samples, 0.02%)</title><rect x="80.9243%" y="373" width="0.0190%" height="15" fill="rgb(228,66,33)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::RandomState::new (2 samples, 0.02%)</title><rect x="80.9243%" y="357" width="0.0190%" height="15" fill="rgb(234,215,21)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::with (2 samples, 0.02%)</title><rect x="80.9243%" y="341" width="0.0190%" height="15" fill="rgb(222,191,20)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_with (2 samples, 0.02%)</title><rect x="80.9243%" y="325" width="0.0190%" height="15" fill="rgb(245,79,54)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`enum2$&lt;core::option::Option&lt;ref$&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt; &gt;::ok_or(enum2$&lt;core::option::Option&lt;ref$&lt;core::cell::Cell&lt;tuple$ (2 samples, 0.02%)</title><rect x="80.9243%" y="309" width="0.0190%" height="15" fill="rgb(240,10,37)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$82::new::KEYS::__getit (2 samples, 0.02%)</title><rect x="80.9243%" y="293" width="0.0190%" height="15" fill="rgb(214,192,32)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::thread::local::fast::Key::try_initialize&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::collections::hash::map::impl$82::new::KEYS::__getit::closure_env$0&gt; (2 samples, 0.02%)</title><rect x="80.9243%" y="277" width="0.0190%" height="15" fill="rgb(209,36,54)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::thread::local::lazy::LazyKeyInner::initialize (2 samples, 0.02%)</title><rect x="80.9243%" y="261" width="0.0190%" height="15" fill="rgb(220,10,11)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$82::new::KEYS::__getit::closure$0 (2 samples, 0.02%)</title><rect x="80.9243%" y="245" width="0.0190%" height="15" fill="rgb(221,106,17)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$82::new::KEYS::__init (2 samples, 0.02%)</title><rect x="80.9243%" y="229" width="0.0190%" height="15" fill="rgb(251,142,44)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::sys::windows::rand::hashmap_random_keys (2 samples, 0.02%)</title><rect x="80.9243%" y="213" width="0.0190%" height="15" fill="rgb(238,13,15)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::sys::windows::c::nt_success (2 samples, 0.02%)</title><rect x="80.9243%" y="197" width="0.0190%" height="15" fill="rgb(208,107,27)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="207.50"></text></g><g><title>`0x7FFC8A183229 (2 samples, 0.02%)</title><rect x="80.9243%" y="181" width="0.0190%" height="15" fill="rgb(205,136,37)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="191.50"></text></g><g><title>`0x7FFC8A183312 (2 samples, 0.02%)</title><rect x="80.9243%" y="165" width="0.0190%" height="15" fill="rgb(250,205,27)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="175.50"></text></g><g><title>`0x7FFC8A1854C9 (2 samples, 0.02%)</title><rect x="80.9243%" y="149" width="0.0190%" height="15" fill="rgb(210,80,43)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="159.50"></text></g><g><title>`0x7FFC8A181E98 (2 samples, 0.02%)</title><rect x="80.9243%" y="133" width="0.0190%" height="15" fill="rgb(247,160,36)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="143.50"></text></g><g><title>`0x7FFC8A182199 (2 samples, 0.02%)</title><rect x="80.9243%" y="117" width="0.0190%" height="15" fill="rgb(234,13,49)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="127.50"></text></g><g><title>`0x7FFC8A6756B2 (2 samples, 0.02%)</title><rect x="80.9243%" y="101" width="0.0190%" height="15" fill="rgb(234,122,0)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="111.50"></text></g><g><title>`0x7FFC8CA06AF4 (2 samples, 0.02%)</title><rect x="80.9243%" y="85" width="0.0190%" height="15" fill="rgb(207,146,38)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="95.50"></text></g><g><title>`0x7FFC8CA073E4 (2 samples, 0.02%)</title><rect x="80.9243%" y="69" width="0.0190%" height="15" fill="rgb(207,177,25)" fg:x="8510" fg:w="2"/><text x="81.1743%" y="79.50"></text></g><g><title>`0x7FFC8CA1476B (3 samples, 0.03%)</title><rect x="80.9719%" y="293" width="0.0285%" height="15" fill="rgb(211,178,42)" fg:x="8515" fg:w="3"/><text x="81.2219%" y="303.50"></text></g><g><title>`0x7FFC8CA1571F (2 samples, 0.02%)</title><rect x="81.0004%" y="277" width="0.0190%" height="15" fill="rgb(230,69,54)" fg:x="8518" fg:w="2"/><text x="81.2504%" y="287.50"></text></g><g><title>`0x7FFC8CA1592E (2 samples, 0.02%)</title><rect x="81.0289%" y="277" width="0.0190%" height="15" fill="rgb(214,135,41)" fg:x="8521" fg:w="2"/><text x="81.2789%" y="287.50"></text></g><g><title>`0x7FFC8CA16B5B (2 samples, 0.02%)</title><rect x="81.1050%" y="261" width="0.0190%" height="15" fill="rgb(237,67,25)" fg:x="8529" fg:w="2"/><text x="81.3550%" y="271.50"></text></g><g><title>`0x7FFC8CA15B74 (7 samples, 0.07%)</title><rect x="81.0669%" y="277" width="0.0666%" height="15" fill="rgb(222,189,50)" fg:x="8525" fg:w="7"/><text x="81.3169%" y="287.50"></text></g><g><title>`0x7FFC8CA15BA1 (3 samples, 0.03%)</title><rect x="81.1525%" y="277" width="0.0285%" height="15" fill="rgb(245,148,34)" fg:x="8534" fg:w="3"/><text x="81.4025%" y="287.50"></text></g><g><title>`0x7FFC8CA15BBB (2 samples, 0.02%)</title><rect x="81.1811%" y="277" width="0.0190%" height="15" fill="rgb(222,29,6)" fg:x="8537" fg:w="2"/><text x="81.4311%" y="287.50"></text></g><g><title>`0x7FFC8CA96FD1 (2 samples, 0.02%)</title><rect x="81.2001%" y="277" width="0.0190%" height="15" fill="rgb(221,189,43)" fg:x="8539" fg:w="2"/><text x="81.4501%" y="287.50"></text></g><g><title>`0x7FFC8CA96FEA (4 samples, 0.04%)</title><rect x="81.2286%" y="277" width="0.0380%" height="15" fill="rgb(207,36,27)" fg:x="8542" fg:w="4"/><text x="81.4786%" y="287.50"></text></g><g><title>`0x7FFC8CA96FFB (3 samples, 0.03%)</title><rect x="81.2666%" y="277" width="0.0285%" height="15" fill="rgb(217,90,24)" fg:x="8546" fg:w="3"/><text x="81.5166%" y="287.50"></text></g><g><title>`0x7FFC8CA9700C (2 samples, 0.02%)</title><rect x="81.2952%" y="277" width="0.0190%" height="15" fill="rgb(224,66,35)" fg:x="8549" fg:w="2"/><text x="81.5452%" y="287.50"></text></g><g><title>`0x7FFC8CA97018 (3 samples, 0.03%)</title><rect x="81.3142%" y="277" width="0.0285%" height="15" fill="rgb(221,13,50)" fg:x="8551" fg:w="3"/><text x="81.5642%" y="287.50"></text></g><g><title>`0x7FFC8CA97023 (5 samples, 0.05%)</title><rect x="81.3427%" y="277" width="0.0475%" height="15" fill="rgb(236,68,49)" fg:x="8554" fg:w="5"/><text x="81.5927%" y="287.50"></text></g><g><title>`0x7FFC8CA9703C (2 samples, 0.02%)</title><rect x="81.4188%" y="277" width="0.0190%" height="15" fill="rgb(229,146,28)" fg:x="8562" fg:w="2"/><text x="81.6688%" y="287.50"></text></g><g><title>`0x7FFC8CA970EA (3 samples, 0.03%)</title><rect x="81.4854%" y="277" width="0.0285%" height="15" fill="rgb(225,31,38)" fg:x="8569" fg:w="3"/><text x="81.7354%" y="287.50"></text></g><g><title>`0x7FFC8CA147B1 (55 samples, 0.52%)</title><rect x="81.0004%" y="293" width="0.5230%" height="15" fill="rgb(250,208,3)" fg:x="8518" fg:w="55"/><text x="81.2504%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (62 samples, 0.59%)</title><rect x="80.9528%" y="325" width="0.5896%" height="15" fill="rgb(246,54,23)" fg:x="8513" fg:w="62"/><text x="81.2028%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::alloc::dealloc (62 samples, 0.59%)</title><rect x="80.9528%" y="309" width="0.5896%" height="15" fill="rgb(243,76,11)" fg:x="8513" fg:w="62"/><text x="81.2028%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::drop_in_place(alloc::vec::into_iter::IntoIter (73 samples, 0.69%)</title><rect x="80.9528%" y="421" width="0.6942%" height="15" fill="rgb(245,21,50)" fg:x="8513" fg:w="73"/><text x="81.2028%" y="431.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::into_iter::impl$13::drop(alloc::vec::into_iter::IntoIter (73 samples, 0.69%)</title><rect x="80.9528%" y="405" width="0.6942%" height="15" fill="rgb(228,9,43)" fg:x="8513" fg:w="73"/><text x="81.2028%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::drop_in_place(alloc::vec::into_iter::impl$13::drop::DropGuard (73 samples, 0.69%)</title><rect x="80.9528%" y="389" width="0.6942%" height="15" fill="rgb(208,100,47)" fg:x="8513" fg:w="73"/><text x="81.2028%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::vec::into_iter::impl$13::drop::impl$0::drop(alloc::vec::into_iter::impl$13::drop::DropGuard (73 samples, 0.69%)</title><rect x="80.9528%" y="373" width="0.6942%" height="15" fill="rgb(232,26,8)" fg:x="8513" fg:w="73"/><text x="81.2028%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (73 samples, 0.69%)</title><rect x="80.9528%" y="357" width="0.6942%" height="15" fill="rgb(216,166,38)" fg:x="8513" fg:w="73"/><text x="81.2028%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (73 samples, 0.69%)</title><rect x="80.9528%" y="341" width="0.6942%" height="15" fill="rgb(251,202,51)" fg:x="8513" fg:w="73"/><text x="81.2028%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`alloc::raw_vec::RawVec&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,alloc::alloc::Global&gt;::current_memory (11 samples, 0.10%)</title><rect x="81.5424%" y="325" width="0.1046%" height="15" fill="rgb(254,216,34)" fg:x="8575" fg:w="11"/><text x="81.7924%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$83::build_hasher (7 samples, 0.07%)</title><rect x="81.6946%" y="357" width="0.0666%" height="15" fill="rgb(251,32,27)" fg:x="8591" fg:w="7"/><text x="81.9446%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.05%)</title><rect x="81.7136%" y="341" width="0.0475%" height="15" fill="rgb(208,127,28)" fg:x="8593" fg:w="5"/><text x="81.9636%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::new_with_keys (5 samples, 0.05%)</title><rect x="81.7136%" y="325" width="0.0475%" height="15" fill="rgb(224,137,22)" fg:x="8593" fg:w="5"/><text x="81.9636%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::reset (5 samples, 0.05%)</title><rect x="81.7136%" y="309" width="0.0475%" height="15" fill="rgb(254,70,32)" fg:x="8593" fg:w="5"/><text x="81.9636%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$12::to_ne_bytes (23 samples, 0.22%)</title><rect x="83.5964%" y="197" width="0.2187%" height="15" fill="rgb(229,75,37)" fg:x="8791" fg:w="23"/><text x="83.8464%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::rotate_left (57 samples, 0.54%)</title><rect x="87.1339%" y="133" width="0.5420%" height="15" fill="rgb(252,64,23)" fg:x="9163" fg:w="57"/><text x="87.3839%" y="143.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::c_rounds (296 samples, 2.81%)</title><rect x="85.2606%" y="149" width="2.8148%" height="15" fill="rgb(232,162,48)" fg:x="8966" fg:w="296"/><text x="85.5106%" y="159.50">ao..</text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (42 samples, 0.40%)</title><rect x="87.6759%" y="133" width="0.3994%" height="15" fill="rgb(246,160,12)" fg:x="9220" fg:w="42"/><text x="87.9259%" y="143.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt; (667 samples, 6.34%)</title><rect x="82.2556%" y="213" width="6.3427%" height="15" fill="rgb(247,166,0)" fg:x="8650" fg:w="667"/><text x="82.5056%" y="223.50">aoc_2021..</text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::write(std::collections::hash::map::DefaultHasher*, ref$&lt;slice2$ (503 samples, 4.78%)</title><rect x="83.8151%" y="197" width="4.7832%" height="15" fill="rgb(249,219,21)" fg:x="8814" fg:w="503"/><text x="84.0651%" y="207.50">aoc_20..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (503 samples, 4.78%)</title><rect x="83.8151%" y="181" width="4.7832%" height="15" fill="rgb(205,209,3)" fg:x="8814" fg:w="503"/><text x="84.0651%" y="191.50">aoc_20..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (503 samples, 4.78%)</title><rect x="83.8151%" y="165" width="4.7832%" height="15" fill="rgb(243,44,1)" fg:x="8814" fg:w="503"/><text x="84.0651%" y="175.50">aoc_20..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (55 samples, 0.52%)</title><rect x="88.0753%" y="149" width="0.5230%" height="15" fill="rgb(206,159,16)" fg:x="9262" fg:w="55"/><text x="88.3253%" y="159.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$7::hash&lt;std::collections::hash::map::DefaultHasher&gt; (720 samples, 6.85%)</title><rect x="81.7992%" y="309" width="6.8467%" height="15" fill="rgb(244,77,30)" fg:x="8602" fg:w="720"/><text x="82.0492%" y="319.50">aoc_2021_..</text></g><g><title>aoc_2021_rust_practice.exe`core::array::impl$12::hash (720 samples, 6.85%)</title><rect x="81.7992%" y="293" width="6.8467%" height="15" fill="rgb(218,69,12)" fg:x="8602" fg:w="720"/><text x="82.0492%" y="303.50">aoc_2021_..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (720 samples, 6.85%)</title><rect x="81.7992%" y="277" width="6.8467%" height="15" fill="rgb(212,87,7)" fg:x="8602" fg:w="720"/><text x="82.0492%" y="287.50">aoc_2021_..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hash::hash_slice(ref$&lt;slice2$ (720 samples, 6.85%)</title><rect x="81.7992%" y="261" width="6.8467%" height="15" fill="rgb(245,114,25)" fg:x="8602" fg:w="720"/><text x="82.0492%" y="271.50">aoc_2021_..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hash::hash_slice::rt(ref$&lt;slice2$ (720 samples, 6.85%)</title><rect x="81.7992%" y="245" width="6.8467%" height="15" fill="rgb(210,61,42)" fg:x="8602" fg:w="720"/><text x="82.0492%" y="255.50">aoc_2021_..</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$23::hash (720 samples, 6.85%)</title><rect x="81.7992%" y="229" width="6.8467%" height="15" fill="rgb(211,52,33)" fg:x="8602" fg:w="720"/><text x="82.0492%" y="239.50">aoc_2021_..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::impls::impl$18::hash (5 samples, 0.05%)</title><rect x="88.5983%" y="213" width="0.0475%" height="15" fill="rgb(234,58,33)" fg:x="9317" fg:w="5"/><text x="88.8483%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hasher::write_isize (5 samples, 0.05%)</title><rect x="88.5983%" y="197" width="0.0475%" height="15" fill="rgb(220,115,36)" fg:x="9317" fg:w="5"/><text x="88.8483%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$12::to_ne_bytes (8 samples, 0.08%)</title><rect x="88.6554%" y="293" width="0.0761%" height="15" fill="rgb(243,153,54)" fg:x="9323" fg:w="8"/><text x="88.9054%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::c_rounds (7 samples, 0.07%)</title><rect x="88.8075%" y="245" width="0.0666%" height="15" fill="rgb(251,47,18)" fg:x="9339" fg:w="7"/><text x="89.0575%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (7 samples, 0.07%)</title><rect x="88.8075%" y="229" width="0.0666%" height="15" fill="rgb(242,102,42)" fg:x="9339" fg:w="7"/><text x="89.0575%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt; (25 samples, 0.24%)</title><rect x="88.6459%" y="309" width="0.2377%" height="15" fill="rgb(234,31,38)" fg:x="9322" fg:w="25"/><text x="88.8959%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::write(std::collections::hash::map::DefaultHasher*, ref$&lt;slice2$ (16 samples, 0.15%)</title><rect x="88.7315%" y="293" width="0.1521%" height="15" fill="rgb(221,117,51)" fg:x="9331" fg:w="16"/><text x="88.9815%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (16 samples, 0.15%)</title><rect x="88.7315%" y="277" width="0.1521%" height="15" fill="rgb(212,20,18)" fg:x="9331" fg:w="16"/><text x="88.9815%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (16 samples, 0.15%)</title><rect x="88.7315%" y="261" width="0.1521%" height="15" fill="rgb(245,133,36)" fg:x="9331" fg:w="16"/><text x="88.9815%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::rotate_left (6 samples, 0.06%)</title><rect x="88.9121%" y="293" width="0.0571%" height="15" fill="rgb(212,6,19)" fg:x="9350" fg:w="6"/><text x="89.1621%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::c_rounds (11 samples, 0.10%)</title><rect x="88.8836%" y="309" width="0.1046%" height="15" fill="rgb(218,1,36)" fg:x="9347" fg:w="11"/><text x="89.1336%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (2 samples, 0.02%)</title><rect x="88.9692%" y="293" width="0.0190%" height="15" fill="rgb(246,84,54)" fg:x="9356" fg:w="2"/><text x="89.2192%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::rotate_left (17 samples, 0.16%)</title><rect x="89.0548%" y="293" width="0.1617%" height="15" fill="rgb(242,110,6)" fg:x="9365" fg:w="17"/><text x="89.3048%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt; &gt; (798 samples, 7.59%)</title><rect x="81.6660%" y="373" width="7.5884%" height="15" fill="rgb(214,47,5)" fg:x="8588" fg:w="798"/><text x="81.9160%" y="383.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::finish (788 samples, 7.49%)</title><rect x="81.7611%" y="357" width="7.4933%" height="15" fill="rgb(218,159,25)" fg:x="8598" fg:w="788"/><text x="82.0111%" y="367.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::finish (788 samples, 7.49%)</title><rect x="81.7611%" y="341" width="7.4933%" height="15" fill="rgb(215,211,28)" fg:x="8598" fg:w="788"/><text x="82.0111%" y="351.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (788 samples, 7.49%)</title><rect x="81.7611%" y="325" width="7.4933%" height="15" fill="rgb(238,59,32)" fg:x="8598" fg:w="788"/><text x="82.0111%" y="335.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::d_rounds (28 samples, 0.27%)</title><rect x="88.9882%" y="309" width="0.2663%" height="15" fill="rgb(226,82,3)" fg:x="9358" fg:w="28"/><text x="89.2382%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (4 samples, 0.04%)</title><rect x="89.2164%" y="293" width="0.0380%" height="15" fill="rgb(240,164,32)" fg:x="9382" fg:w="4"/><text x="89.4664%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="89.2545%" y="373" width="0.0285%" height="15" fill="rgb(232,46,7)" fg:x="9386" fg:w="3"/><text x="89.5045%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::bitmask::impl$2::next (9 samples, 0.09%)</title><rect x="89.4161%" y="325" width="0.0856%" height="15" fill="rgb(229,129,53)" fg:x="9403" fg:w="9"/><text x="89.6661%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.09%)</title><rect x="89.4161%" y="309" width="0.0856%" height="15" fill="rgb(234,188,29)" fg:x="9403" fg:w="9"/><text x="89.6661%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::h2 (31 samples, 0.29%)</title><rect x="89.5017%" y="325" width="0.2948%" height="15" fill="rgb(246,141,4)" fg:x="9412" fg:w="31"/><text x="89.7517%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::impl$7::find::closure$0(hashbrown::raw::impl$7::find::closure_env$0&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0 (28 samples, 0.27%)</title><rect x="89.7965%" y="325" width="0.2663%" height="15" fill="rgb(229,23,39)" fg:x="9443" fg:w="28"/><text x="90.0465%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;*, tuple$ (28 samples, 0.27%)</title><rect x="89.7965%" y="309" width="0.2663%" height="15" fill="rgb(206,12,3)" fg:x="9443" fg:w="28"/><text x="90.0465%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$4::eq (28 samples, 0.27%)</title><rect x="89.7965%" y="293" width="0.2663%" height="15" fill="rgb(252,226,20)" fg:x="9443" fg:w="28"/><text x="90.0465%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::array::equality::impl$0::eq (28 samples, 0.27%)</title><rect x="89.7965%" y="277" width="0.2663%" height="15" fill="rgb(216,123,35)" fg:x="9443" fg:w="28"/><text x="90.0465%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::array::equality::impl$8::spec_eq (28 samples, 0.27%)</title><rect x="89.7965%" y="261" width="0.2663%" height="15" fill="rgb(212,68,40)" fg:x="9443" fg:w="28"/><text x="90.0465%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;, ref$&lt;slice2$ (28 samples, 0.27%)</title><rect x="89.7965%" y="245" width="0.2663%" height="15" fill="rgb(254,125,32)" fg:x="9443" fg:w="28"/><text x="90.0465%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::cmp::impl$4::equal(ref$&lt;slice2$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;, ref$&lt;slice2$ (28 samples, 0.27%)</title><rect x="89.7965%" y="229" width="0.2663%" height="15" fill="rgb(253,97,22)" fg:x="9443" fg:w="28"/><text x="90.0465%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::all(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;,core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;*, core::slice::cmp::impl$4::equal::closure_env$0 (28 samples, 0.27%)</title><rect x="89.7965%" y="213" width="0.2663%" height="15" fill="rgb(241,101,14)" fg:x="9443" fg:w="28"/><text x="90.0465%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::try_fold(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;,core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::all::check::closure_env$0&lt;tuple$&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;,ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;,core::slice::cmp::impl$4::equal::closure_env$0 (28 samples, 0.27%)</title><rect x="89.7965%" y="197" width="0.2663%" height="15" fill="rgb(238,103,29)" fg:x="9443" fg:w="28"/><text x="90.0465%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::sse2::Group::match_byte (36 samples, 0.34%)</title><rect x="90.0628%" y="325" width="0.3423%" height="15" fill="rgb(233,195,47)" fg:x="9471" fg:w="36"/><text x="90.3128%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (36 samples, 0.34%)</title><rect x="90.0628%" y="309" width="0.3423%" height="15" fill="rgb(246,218,30)" fg:x="9471" fg:w="36"/><text x="90.3128%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize,std::collections::hash::map::RandomState&gt;::contains_key (923 samples, 8.78%)</title><rect x="81.6565%" y="421" width="8.7771%" height="15" fill="rgb(219,145,47)" fg:x="8587" fg:w="923"/><text x="81.9065%" y="431.50">aoc_2021_rus..</text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::contains_key (923 samples, 8.78%)</title><rect x="81.6565%" y="405" width="8.7771%" height="15" fill="rgb(243,12,26)" fg:x="8587" fg:w="923"/><text x="81.9065%" y="415.50">aoc_2021_rus..</text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get_inner (923 samples, 8.78%)</title><rect x="81.6565%" y="389" width="8.7771%" height="15" fill="rgb(214,87,16)" fg:x="8587" fg:w="923"/><text x="81.9065%" y="399.50">aoc_2021_rus..</text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTable&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (121 samples, 1.15%)</title><rect x="89.2830%" y="373" width="1.1506%" height="15" fill="rgb(208,99,42)" fg:x="9389" fg:w="121"/><text x="89.5330%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTable&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (121 samples, 1.15%)</title><rect x="89.2830%" y="357" width="1.1506%" height="15" fill="rgb(253,99,2)" fg:x="9389" fg:w="121"/><text x="89.5330%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (121 samples, 1.15%)</title><rect x="89.2830%" y="341" width="1.1506%" height="15" fill="rgb(220,168,23)" fg:x="9389" fg:w="121"/><text x="89.5330%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::sse2::Group::match_empty (3 samples, 0.03%)</title><rect x="90.4051%" y="325" width="0.0285%" height="15" fill="rgb(242,38,24)" fg:x="9507" fg:w="3"/><text x="90.6551%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::sse2::Group::match_byte (3 samples, 0.03%)</title><rect x="90.4051%" y="309" width="0.0285%" height="15" fill="rgb(225,182,9)" fg:x="9507" fg:w="3"/><text x="90.6551%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.03%)</title><rect x="90.4051%" y="293" width="0.0285%" height="15" fill="rgb(243,178,37)" fg:x="9507" fg:w="3"/><text x="90.6551%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::rotate_left (2 samples, 0.02%)</title><rect x="90.9661%" y="133" width="0.0190%" height="15" fill="rgb(232,139,19)" fg:x="9566" fg:w="2"/><text x="91.2161%" y="143.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::c_rounds (23 samples, 0.22%)</title><rect x="90.7950%" y="149" width="0.2187%" height="15" fill="rgb(225,201,24)" fg:x="9548" fg:w="23"/><text x="91.0450%" y="159.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (3 samples, 0.03%)</title><rect x="90.9852%" y="133" width="0.0285%" height="15" fill="rgb(221,47,46)" fg:x="9568" fg:w="3"/><text x="91.2352%" y="143.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$7::hash&lt;std::collections::hash::map::DefaultHasher&gt; (65 samples, 0.62%)</title><rect x="90.4526%" y="309" width="0.6181%" height="15" fill="rgb(249,23,13)" fg:x="9512" fg:w="65"/><text x="90.7026%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::array::impl$12::hash (64 samples, 0.61%)</title><rect x="90.4622%" y="293" width="0.6086%" height="15" fill="rgb(219,9,5)" fg:x="9513" fg:w="64"/><text x="90.7122%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (64 samples, 0.61%)</title><rect x="90.4622%" y="277" width="0.6086%" height="15" fill="rgb(254,171,16)" fg:x="9513" fg:w="64"/><text x="90.7122%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hash::hash_slice(ref$&lt;slice2$ (64 samples, 0.61%)</title><rect x="90.4622%" y="261" width="0.6086%" height="15" fill="rgb(230,171,20)" fg:x="9513" fg:w="64"/><text x="90.7122%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hash::hash_slice::rt(ref$&lt;slice2$ (64 samples, 0.61%)</title><rect x="90.4622%" y="245" width="0.6086%" height="15" fill="rgb(210,71,41)" fg:x="9513" fg:w="64"/><text x="90.7122%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$23::hash (64 samples, 0.61%)</title><rect x="90.4622%" y="229" width="0.6086%" height="15" fill="rgb(206,173,20)" fg:x="9513" fg:w="64"/><text x="90.7122%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt; (62 samples, 0.59%)</title><rect x="90.4812%" y="213" width="0.5896%" height="15" fill="rgb(233,88,34)" fg:x="9515" fg:w="62"/><text x="90.7312%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::write(std::collections::hash::map::DefaultHasher*, ref$&lt;slice2$ (54 samples, 0.51%)</title><rect x="90.5572%" y="197" width="0.5135%" height="15" fill="rgb(223,209,46)" fg:x="9523" fg:w="54"/><text x="90.8072%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (54 samples, 0.51%)</title><rect x="90.5572%" y="181" width="0.5135%" height="15" fill="rgb(250,43,18)" fg:x="9523" fg:w="54"/><text x="90.8072%" y="191.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (54 samples, 0.51%)</title><rect x="90.5572%" y="165" width="0.5135%" height="15" fill="rgb(208,13,10)" fg:x="9523" fg:w="54"/><text x="90.8072%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (6 samples, 0.06%)</title><rect x="91.0137%" y="149" width="0.0571%" height="15" fill="rgb(212,200,36)" fg:x="9571" fg:w="6"/><text x="91.2637%" y="159.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$12::to_ne_bytes (3 samples, 0.03%)</title><rect x="91.0707%" y="293" width="0.0285%" height="15" fill="rgb(225,90,30)" fg:x="9577" fg:w="3"/><text x="91.3207%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt; (6 samples, 0.06%)</title><rect x="91.0707%" y="309" width="0.0571%" height="15" fill="rgb(236,182,39)" fg:x="9577" fg:w="6"/><text x="91.3207%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::write(std::collections::hash::map::DefaultHasher*, ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="91.0993%" y="293" width="0.0285%" height="15" fill="rgb(212,144,35)" fg:x="9580" fg:w="3"/><text x="91.3493%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="91.0993%" y="277" width="0.0285%" height="15" fill="rgb(228,63,44)" fg:x="9580" fg:w="3"/><text x="91.3493%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="91.0993%" y="261" width="0.0285%" height="15" fill="rgb(228,109,6)" fg:x="9580" fg:w="3"/><text x="91.3493%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::c_rounds (2 samples, 0.02%)</title><rect x="91.1088%" y="245" width="0.0190%" height="15" fill="rgb(238,117,24)" fg:x="9581" fg:w="2"/><text x="91.3588%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (2 samples, 0.02%)</title><rect x="91.1088%" y="229" width="0.0190%" height="15" fill="rgb(242,26,26)" fg:x="9581" fg:w="2"/><text x="91.3588%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt; &gt; (78 samples, 0.74%)</title><rect x="90.4336%" y="373" width="0.7417%" height="15" fill="rgb(221,92,48)" fg:x="9510" fg:w="78"/><text x="90.6836%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::finish (77 samples, 0.73%)</title><rect x="90.4431%" y="357" width="0.7322%" height="15" fill="rgb(209,209,32)" fg:x="9511" fg:w="77"/><text x="90.6931%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::finish (77 samples, 0.73%)</title><rect x="90.4431%" y="341" width="0.7322%" height="15" fill="rgb(221,70,22)" fg:x="9511" fg:w="77"/><text x="90.6931%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (77 samples, 0.73%)</title><rect x="90.4431%" y="325" width="0.7322%" height="15" fill="rgb(248,145,5)" fg:x="9511" fg:w="77"/><text x="90.6931%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::d_rounds (5 samples, 0.05%)</title><rect x="91.1278%" y="309" width="0.0475%" height="15" fill="rgb(226,116,26)" fg:x="9583" fg:w="5"/><text x="91.3778%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::rotate_left (4 samples, 0.04%)</title><rect x="91.1373%" y="293" width="0.0380%" height="15" fill="rgb(244,5,17)" fg:x="9584" fg:w="4"/><text x="91.3873%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::h2 (2 samples, 0.02%)</title><rect x="91.1944%" y="325" width="0.0190%" height="15" fill="rgb(252,159,33)" fg:x="9590" fg:w="2"/><text x="91.4444%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize,std::collections::hash::map::RandomState&gt;::get (86 samples, 0.82%)</title><rect x="90.4336%" y="421" width="0.8178%" height="15" fill="rgb(206,71,0)" fg:x="9510" fg:w="86"/><text x="90.6836%" y="431.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get (86 samples, 0.82%)</title><rect x="90.4336%" y="405" width="0.8178%" height="15" fill="rgb(233,118,54)" fg:x="9510" fg:w="86"/><text x="90.6836%" y="415.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get_inner (86 samples, 0.82%)</title><rect x="90.4336%" y="389" width="0.8178%" height="15" fill="rgb(234,83,48)" fg:x="9510" fg:w="86"/><text x="90.6836%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTable&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (8 samples, 0.08%)</title><rect x="91.1754%" y="373" width="0.0761%" height="15" fill="rgb(228,3,54)" fg:x="9588" fg:w="8"/><text x="91.4254%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTable&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (8 samples, 0.08%)</title><rect x="91.1754%" y="357" width="0.0761%" height="15" fill="rgb(226,155,13)" fg:x="9588" fg:w="8"/><text x="91.4254%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (8 samples, 0.08%)</title><rect x="91.1754%" y="341" width="0.0761%" height="15" fill="rgb(241,28,37)" fg:x="9588" fg:w="8"/><text x="91.4254%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::impl$7::find::closure$0(hashbrown::raw::impl$7::find::closure_env$0&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0 (4 samples, 0.04%)</title><rect x="91.2134%" y="325" width="0.0380%" height="15" fill="rgb(233,93,10)" fg:x="9592" fg:w="4"/><text x="91.4634%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;*, tuple$ (4 samples, 0.04%)</title><rect x="91.2134%" y="309" width="0.0380%" height="15" fill="rgb(225,113,19)" fg:x="9592" fg:w="4"/><text x="91.4634%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$4::eq (4 samples, 0.04%)</title><rect x="91.2134%" y="293" width="0.0380%" height="15" fill="rgb(241,2,18)" fg:x="9592" fg:w="4"/><text x="91.4634%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::array::equality::impl$0::eq (4 samples, 0.04%)</title><rect x="91.2134%" y="277" width="0.0380%" height="15" fill="rgb(228,207,21)" fg:x="9592" fg:w="4"/><text x="91.4634%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::array::equality::impl$8::spec_eq (4 samples, 0.04%)</title><rect x="91.2134%" y="261" width="0.0380%" height="15" fill="rgb(213,211,35)" fg:x="9592" fg:w="4"/><text x="91.4634%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;, ref$&lt;slice2$ (4 samples, 0.04%)</title><rect x="91.2134%" y="245" width="0.0380%" height="15" fill="rgb(209,83,10)" fg:x="9592" fg:w="4"/><text x="91.4634%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::cmp::impl$4::equal(ref$&lt;slice2$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;, ref$&lt;slice2$ (4 samples, 0.04%)</title><rect x="91.2134%" y="229" width="0.0380%" height="15" fill="rgb(209,164,1)" fg:x="9592" fg:w="4"/><text x="91.4634%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::all(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;,core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;*, core::slice::cmp::impl$4::equal::closure_env$0 (4 samples, 0.04%)</title><rect x="91.2134%" y="213" width="0.0380%" height="15" fill="rgb(213,184,43)" fg:x="9592" fg:w="4"/><text x="91.4634%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::try_fold(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;,core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::all::check::closure_env$0&lt;tuple$&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;,ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;,core::slice::cmp::impl$4::equal::closure_env$0 (4 samples, 0.04%)</title><rect x="91.2134%" y="197" width="0.0380%" height="15" fill="rgb(231,61,34)" fg:x="9592" fg:w="4"/><text x="91.4634%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$83::build_hasher (2 samples, 0.02%)</title><rect x="91.3370%" y="373" width="0.0190%" height="15" fill="rgb(235,75,3)" fg:x="9605" fg:w="2"/><text x="91.5870%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="91.3370%" y="357" width="0.0190%" height="15" fill="rgb(220,106,47)" fg:x="9605" fg:w="2"/><text x="91.5870%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::new_with_keys (2 samples, 0.02%)</title><rect x="91.3370%" y="341" width="0.0190%" height="15" fill="rgb(210,196,33)" fg:x="9605" fg:w="2"/><text x="91.5870%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$12::to_ne_bytes (23 samples, 0.22%)</title><rect x="93.1818%" y="213" width="0.2187%" height="15" fill="rgb(229,154,42)" fg:x="9799" fg:w="23"/><text x="93.4318%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::rotate_left (52 samples, 0.49%)</title><rect x="96.3104%" y="149" width="0.4945%" height="15" fill="rgb(228,114,26)" fg:x="10128" fg:w="52"/><text x="96.5604%" y="159.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::c_rounds (238 samples, 2.26%)</title><rect x="94.9220%" y="165" width="2.2632%" height="15" fill="rgb(208,144,1)" fg:x="9982" fg:w="238"/><text x="95.1720%" y="175.50">a..</text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (40 samples, 0.38%)</title><rect x="96.8049%" y="149" width="0.3804%" height="15" fill="rgb(239,112,37)" fg:x="10180" fg:w="40"/><text x="97.0549%" y="159.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt; (637 samples, 6.06%)</title><rect x="91.6889%" y="229" width="6.0574%" height="15" fill="rgb(210,96,50)" fg:x="9642" fg:w="637"/><text x="91.9389%" y="239.50">aoc_2021..</text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::write(std::collections::hash::map::DefaultHasher*, ref$&lt;slice2$ (457 samples, 4.35%)</title><rect x="93.4005%" y="213" width="4.3458%" height="15" fill="rgb(222,178,2)" fg:x="9822" fg:w="457"/><text x="93.6505%" y="223.50">aoc_2..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (457 samples, 4.35%)</title><rect x="93.4005%" y="197" width="4.3458%" height="15" fill="rgb(226,74,18)" fg:x="9822" fg:w="457"/><text x="93.6505%" y="207.50">aoc_2..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (457 samples, 4.35%)</title><rect x="93.4005%" y="181" width="4.3458%" height="15" fill="rgb(225,67,54)" fg:x="9822" fg:w="457"/><text x="93.6505%" y="191.50">aoc_2..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (59 samples, 0.56%)</title><rect x="97.1852%" y="165" width="0.5610%" height="15" fill="rgb(251,92,32)" fg:x="10220" fg:w="59"/><text x="97.4352%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$7::hash&lt;std::collections::hash::map::DefaultHasher&gt; (677 samples, 6.44%)</title><rect x="91.4226%" y="325" width="6.4378%" height="15" fill="rgb(228,149,22)" fg:x="9614" fg:w="677"/><text x="91.6726%" y="335.50">aoc_2021..</text></g><g><title>aoc_2021_rust_practice.exe`core::array::impl$12::hash (677 samples, 6.44%)</title><rect x="91.4226%" y="309" width="6.4378%" height="15" fill="rgb(243,54,13)" fg:x="9614" fg:w="677"/><text x="91.6726%" y="319.50">aoc_2021..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (677 samples, 6.44%)</title><rect x="91.4226%" y="293" width="6.4378%" height="15" fill="rgb(243,180,28)" fg:x="9614" fg:w="677"/><text x="91.6726%" y="303.50">aoc_2021..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hash::hash_slice(ref$&lt;slice2$ (677 samples, 6.44%)</title><rect x="91.4226%" y="277" width="6.4378%" height="15" fill="rgb(208,167,24)" fg:x="9614" fg:w="677"/><text x="91.6726%" y="287.50">aoc_2021..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hash::hash_slice::rt(ref$&lt;slice2$ (677 samples, 6.44%)</title><rect x="91.4226%" y="261" width="6.4378%" height="15" fill="rgb(245,73,45)" fg:x="9614" fg:w="677"/><text x="91.6726%" y="271.50">aoc_2021..</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$23::hash (677 samples, 6.44%)</title><rect x="91.4226%" y="245" width="6.4378%" height="15" fill="rgb(237,203,48)" fg:x="9614" fg:w="677"/><text x="91.6726%" y="255.50">aoc_2021..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::impls::impl$18::hash (12 samples, 0.11%)</title><rect x="97.7463%" y="229" width="0.1141%" height="15" fill="rgb(211,197,16)" fg:x="10279" fg:w="12"/><text x="97.9963%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hasher::write_isize (12 samples, 0.11%)</title><rect x="97.7463%" y="213" width="0.1141%" height="15" fill="rgb(243,99,51)" fg:x="10279" fg:w="12"/><text x="97.9963%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$12::to_ne_bytes (9 samples, 0.09%)</title><rect x="97.8699%" y="309" width="0.0856%" height="15" fill="rgb(215,123,29)" fg:x="10292" fg:w="9"/><text x="98.1199%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::c_rounds (9 samples, 0.09%)</title><rect x="98.0030%" y="261" width="0.0856%" height="15" fill="rgb(239,186,37)" fg:x="10306" fg:w="9"/><text x="98.2530%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (7 samples, 0.07%)</title><rect x="98.0221%" y="245" width="0.0666%" height="15" fill="rgb(252,136,39)" fg:x="10308" fg:w="7"/><text x="98.2721%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt; (25 samples, 0.24%)</title><rect x="97.8604%" y="325" width="0.2377%" height="15" fill="rgb(223,213,32)" fg:x="10291" fg:w="25"/><text x="98.1104%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::write(std::collections::hash::map::DefaultHasher*, ref$&lt;slice2$ (15 samples, 0.14%)</title><rect x="97.9555%" y="309" width="0.1426%" height="15" fill="rgb(233,115,5)" fg:x="10301" fg:w="15"/><text x="98.2055%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (15 samples, 0.14%)</title><rect x="97.9555%" y="293" width="0.1426%" height="15" fill="rgb(207,226,44)" fg:x="10301" fg:w="15"/><text x="98.2055%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (15 samples, 0.14%)</title><rect x="97.9555%" y="277" width="0.1426%" height="15" fill="rgb(208,126,0)" fg:x="10301" fg:w="15"/><text x="98.2055%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::rotate_left (4 samples, 0.04%)</title><rect x="98.0981%" y="309" width="0.0380%" height="15" fill="rgb(244,66,21)" fg:x="10316" fg:w="4"/><text x="98.3481%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::c_rounds (7 samples, 0.07%)</title><rect x="98.0981%" y="325" width="0.0666%" height="15" fill="rgb(222,97,12)" fg:x="10316" fg:w="7"/><text x="98.3481%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (3 samples, 0.03%)</title><rect x="98.1362%" y="309" width="0.0285%" height="15" fill="rgb(219,213,19)" fg:x="10320" fg:w="3"/><text x="98.3862%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::rotate_left (21 samples, 0.20%)</title><rect x="98.2408%" y="309" width="0.1997%" height="15" fill="rgb(252,169,30)" fg:x="10331" fg:w="21"/><text x="98.4908%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid&gt; &gt; (757 samples, 7.20%)</title><rect x="91.2990%" y="389" width="7.1986%" height="15" fill="rgb(206,32,51)" fg:x="9601" fg:w="757"/><text x="91.5490%" y="399.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::impl$86::finish (751 samples, 7.14%)</title><rect x="91.3560%" y="373" width="7.1415%" height="15" fill="rgb(250,172,42)" fg:x="9607" fg:w="751"/><text x="91.6060%" y="383.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$4::finish (751 samples, 7.14%)</title><rect x="91.3560%" y="357" width="7.1415%" height="15" fill="rgb(209,34,43)" fg:x="9607" fg:w="751"/><text x="91.6060%" y="367.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (751 samples, 7.14%)</title><rect x="91.3560%" y="341" width="7.1415%" height="15" fill="rgb(223,11,35)" fg:x="9607" fg:w="751"/><text x="91.6060%" y="351.50">aoc_2021_r..</text></g><g><title>aoc_2021_rust_practice.exe`core::hash::sip::impl$8::d_rounds (35 samples, 0.33%)</title><rect x="98.1647%" y="325" width="0.3328%" height="15" fill="rgb(251,219,26)" fg:x="10323" fg:w="35"/><text x="98.4147%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::num::impl$10::wrapping_add (6 samples, 0.06%)</title><rect x="98.4405%" y="309" width="0.0571%" height="15" fill="rgb(231,119,3)" fg:x="10352" fg:w="6"/><text x="98.6905%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::bitmask::impl$2::next (5 samples, 0.05%)</title><rect x="98.6687%" y="341" width="0.0475%" height="15" fill="rgb(216,97,11)" fg:x="10376" fg:w="5"/><text x="98.9187%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.05%)</title><rect x="98.6687%" y="325" width="0.0475%" height="15" fill="rgb(223,59,9)" fg:x="10376" fg:w="5"/><text x="98.9187%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::h2 (21 samples, 0.20%)</title><rect x="98.7162%" y="341" width="0.1997%" height="15" fill="rgb(233,93,31)" fg:x="10381" fg:w="21"/><text x="98.9662%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;*, tuple$ (67 samples, 0.64%)</title><rect x="98.9159%" y="325" width="0.6371%" height="15" fill="rgb(239,81,33)" fg:x="10402" fg:w="67"/><text x="99.1659%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$4::eq (67 samples, 0.64%)</title><rect x="98.9159%" y="309" width="0.6371%" height="15" fill="rgb(213,120,34)" fg:x="10402" fg:w="67"/><text x="99.1659%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::array::equality::impl$0::eq (67 samples, 0.64%)</title><rect x="98.9159%" y="293" width="0.6371%" height="15" fill="rgb(243,49,53)" fg:x="10402" fg:w="67"/><text x="99.1659%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::array::equality::impl$8::spec_eq (67 samples, 0.64%)</title><rect x="98.9159%" y="277" width="0.6371%" height="15" fill="rgb(247,216,33)" fg:x="10402" fg:w="67"/><text x="99.1659%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;, ref$&lt;slice2$ (67 samples, 0.64%)</title><rect x="98.9159%" y="261" width="0.6371%" height="15" fill="rgb(226,26,14)" fg:x="10402" fg:w="67"/><text x="99.1659%" y="271.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::cmp::impl$4::equal(ref$&lt;slice2$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;, ref$&lt;slice2$ (67 samples, 0.64%)</title><rect x="98.9159%" y="245" width="0.6371%" height="15" fill="rgb(215,49,53)" fg:x="10402" fg:w="67"/><text x="99.1659%" y="255.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::all(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;,core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;*, core::slice::cmp::impl$4::equal::closure_env$0 (67 samples, 0.64%)</title><rect x="98.9159%" y="229" width="0.6371%" height="15" fill="rgb(245,162,40)" fg:x="10402" fg:w="67"/><text x="99.1659%" y="239.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::try_fold(core::iter::adapters::zip::Zip&lt;core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;,core::slice::iter::Iter&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::all::check::closure_env$0&lt;tuple$&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;,ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;,core::slice::cmp::impl$4::equal::closure_env$0 (67 samples, 0.64%)</title><rect x="98.9159%" y="213" width="0.6371%" height="15" fill="rgb(229,68,17)" fg:x="10402" fg:w="67"/><text x="99.1659%" y="223.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::iter::traits::iterator::Iterator::all::check::closure$0(core::iter::traits::iterator::Iterator::all::check::closure_env$0&lt;tuple$&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;,ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;,core::slice::cmp::impl$4::equal::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod,aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt; &gt;*, tuple$&lt;&gt;, tuple$&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;,ref$ (9 samples, 0.09%)</title><rect x="99.4675%" y="197" width="0.0856%" height="15" fill="rgb(213,182,10)" fg:x="10460" fg:w="9"/><text x="99.7175%" y="207.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::slice::cmp::impl$4::equal::closure$0(core::slice::cmp::impl$4::equal::closure_env$0&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod,aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;*, tuple$&lt;ref$&lt;aoc_2021_rust_practice::solutions::day23_b::Amphipod&gt;,ref$ (9 samples, 0.09%)</title><rect x="99.4675%" y="181" width="0.0856%" height="15" fill="rgb(245,125,30)" fg:x="10460" fg:w="9"/><text x="99.7175%" y="191.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::cmp::impls::impl$9::eq (9 samples, 0.09%)</title><rect x="99.4675%" y="165" width="0.0856%" height="15" fill="rgb(232,202,2)" fg:x="10460" fg:w="9"/><text x="99.7175%" y="175.50"></text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::impl$19::eq (9 samples, 0.09%)</title><rect x="99.4675%" y="149" width="0.0856%" height="15" fill="rgb(237,140,51)" fg:x="10460" fg:w="9"/><text x="99.7175%" y="159.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::impl$7::find::closure$0(hashbrown::raw::impl$7::find::closure_env$0&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0 (74 samples, 0.70%)</title><rect x="98.9159%" y="341" width="0.7037%" height="15" fill="rgb(236,157,25)" fg:x="10402" fg:w="74"/><text x="99.1659%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::Bucket&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt; &gt;::as_ref (7 samples, 0.07%)</title><rect x="99.5531%" y="325" width="0.0666%" height="15" fill="rgb(219,209,0)" fg:x="10469" fg:w="7"/><text x="99.8031%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::Bucket&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt; &gt;::as_ptr (7 samples, 0.07%)</title><rect x="99.5531%" y="309" width="0.0666%" height="15" fill="rgb(240,116,54)" fg:x="10469" fg:w="7"/><text x="99.8031%" y="319.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::sub(tuple$ (7 samples, 0.07%)</title><rect x="99.5531%" y="293" width="0.0666%" height="15" fill="rgb(216,10,36)" fg:x="10469" fg:w="7"/><text x="99.8031%" y="303.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::ptr::mut_ptr::impl$0::offset(tuple$ (7 samples, 0.07%)</title><rect x="99.5531%" y="277" width="0.0666%" height="15" fill="rgb(222,72,44)" fg:x="10469" fg:w="7"/><text x="99.8031%" y="287.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::sse2::Group::match_byte (16 samples, 0.15%)</title><rect x="99.6196%" y="341" width="0.1521%" height="15" fill="rgb(232,159,9)" fg:x="10476" fg:w="16"/><text x="99.8696%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (16 samples, 0.15%)</title><rect x="99.6196%" y="325" width="0.1521%" height="15" fill="rgb(210,39,32)" fg:x="10476" fg:w="16"/><text x="99.8696%" y="335.50"></text></g><g><title>`0x7FFC8CA426F1 (10,497 samples, 99.82%)</title><rect x="0.0095%" y="677" width="99.8193%" height="15" fill="rgb(216,194,45)" fg:x="1" fg:w="10497"/><text x="0.2595%" y="687.50">`0x7FFC8CA426F1</text></g><g><title>`0x7FFC8AB17614 (10,497 samples, 99.82%)</title><rect x="0.0095%" y="661" width="99.8193%" height="15" fill="rgb(218,18,35)" fg:x="1" fg:w="10497"/><text x="0.2595%" y="671.50">`0x7FFC8AB17614</text></g><g><title>aoc_2021_rust_practice.exe`__scrt_common_main_seh() (10,490 samples, 99.75%)</title><rect x="0.0761%" y="645" width="99.7528%" height="15" fill="rgb(207,83,51)" fg:x="8" fg:w="10490"/><text x="0.3261%" y="655.50">aoc_2021_rust_practice.exe`__scrt_common_main_seh()</text></g><g><title>aoc_2021_rust_practice.exe`invoke_main() (10,487 samples, 99.72%)</title><rect x="0.1046%" y="629" width="99.7242%" height="15" fill="rgb(225,63,43)" fg:x="11" fg:w="10487"/><text x="0.3546%" y="639.50">aoc_2021_rust_practice.exe`invoke_main()</text></g><g><title>aoc_2021_rust_practice.exe`main (10,487 samples, 99.72%)</title><rect x="0.1046%" y="613" width="99.7242%" height="15" fill="rgb(207,57,36)" fg:x="11" fg:w="10487"/><text x="0.3546%" y="623.50">aoc_2021_rust_practice.exe`main</text></g><g><title>aoc_2021_rust_practice.exe`std::rt::lang_start_internal (10,487 samples, 99.72%)</title><rect x="0.1046%" y="597" width="99.7242%" height="15" fill="rgb(216,99,33)" fg:x="11" fg:w="10487"/><text x="0.3546%" y="607.50">aoc_2021_rust_practice.exe`std::rt::lang_start_internal</text></g><g><title>aoc_2021_rust_practice.exe`std::panic::catch_unwind (10,487 samples, 99.72%)</title><rect x="0.1046%" y="581" width="99.7242%" height="15" fill="rgb(225,42,16)" fg:x="11" fg:w="10487"/><text x="0.3546%" y="591.50">aoc_2021_rust_practice.exe`std::panic::catch_unwind</text></g><g><title>aoc_2021_rust_practice.exe`std::panicking::try (10,487 samples, 99.72%)</title><rect x="0.1046%" y="565" width="99.7242%" height="15" fill="rgb(220,201,45)" fg:x="11" fg:w="10487"/><text x="0.3546%" y="575.50">aoc_2021_rust_practice.exe`std::panicking::try</text></g><g><title>aoc_2021_rust_practice.exe`std::panicking::try::do_call (10,487 samples, 99.72%)</title><rect x="0.1046%" y="549" width="99.7242%" height="15" fill="rgb(225,33,4)" fg:x="11" fg:w="10487"/><text x="0.3546%" y="559.50">aoc_2021_rust_practice.exe`std::panicking::try::do_call</text></g><g><title>aoc_2021_rust_practice.exe`std::rt::lang_start_internal::closure$2 (10,487 samples, 99.72%)</title><rect x="0.1046%" y="533" width="99.7242%" height="15" fill="rgb(224,33,50)" fg:x="11" fg:w="10487"/><text x="0.3546%" y="543.50">aoc_2021_rust_practice.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>aoc_2021_rust_practice.exe`core::result::Result::unwrap_or (10,487 samples, 99.72%)</title><rect x="0.1046%" y="517" width="99.7242%" height="15" fill="rgb(246,198,51)" fg:x="11" fg:w="10487"/><text x="0.3546%" y="527.50">aoc_2021_rust_practice.exe`core::result::Result::unwrap_or</text></g><g><title>aoc_2021_rust_practice.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (10,487 samples, 99.72%)</title><rect x="0.1046%" y="501" width="99.7242%" height="15" fill="rgb(205,22,4)" fg:x="11" fg:w="10487"/><text x="0.3546%" y="511.50">aoc_2021_rust_practice.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>aoc_2021_rust_practice.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (10,487 samples, 99.72%)</title><rect x="0.1046%" y="485" width="99.7242%" height="15" fill="rgb(206,3,8)" fg:x="11" fg:w="10487"/><text x="0.3546%" y="495.50">aoc_2021_rust_practice.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::main (10,487 samples, 99.72%)</title><rect x="0.1046%" y="469" width="99.7242%" height="15" fill="rgb(251,23,15)" fg:x="11" fg:w="10487"/><text x="0.3546%" y="479.50">aoc_2021_rust_practice.exe`aoc_2021_rust_practice::main</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solve(ref$&lt;str$&gt;, alloc::string::String (*)(ref$ (10,487 samples, 99.72%)</title><rect x="0.1046%" y="453" width="99.7242%" height="15" fill="rgb(252,88,28)" fg:x="11" fg:w="10487"/><text x="0.3546%" y="463.50">aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solve(ref$&lt;str$&gt;, alloc::string::String (*)(ref$</text></g><g><title>aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::solution(ref$ (10,486 samples, 99.71%)</title><rect x="0.1141%" y="437" width="99.7147%" height="15" fill="rgb(212,127,14)" fg:x="12" fg:w="10486"/><text x="0.3641%" y="447.50">aoc_2021_rust_practice.exe`aoc_2021_rust_practice::solutions::day23_b::solution(ref$</text></g><g><title>aoc_2021_rust_practice.exe`std::collections::hash::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize,std::collections::hash::map::RandomState&gt;::insert (902 samples, 8.58%)</title><rect x="91.2514%" y="421" width="8.5774%" height="15" fill="rgb(247,145,37)" fg:x="9596" fg:w="902"/><text x="91.5014%" y="431.50">aoc_2021_rus..</text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::map::HashMap&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert (902 samples, 8.58%)</title><rect x="91.2514%" y="405" width="8.5774%" height="15" fill="rgb(209,117,53)" fg:x="9596" fg:w="902"/><text x="91.5014%" y="415.50">aoc_2021_rus..</text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTable&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global&gt;::get_mut(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (138 samples, 1.31%)</title><rect x="98.5165%" y="389" width="1.3123%" height="15" fill="rgb(212,90,42)" fg:x="10360" fg:w="138"/><text x="98.7665%" y="399.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTable&lt;tuple$&lt;aoc_2021_rust_practice::solutions::day23_b::Grid,usize&gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (138 samples, 1.31%)</title><rect x="98.5165%" y="373" width="1.3123%" height="15" fill="rgb(218,164,37)" fg:x="10360" fg:w="138"/><text x="98.7665%" y="383.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (138 samples, 1.31%)</title><rect x="98.5165%" y="357" width="1.3123%" height="15" fill="rgb(246,65,34)" fg:x="10360" fg:w="138"/><text x="98.7665%" y="367.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::sse2::Group::match_empty (6 samples, 0.06%)</title><rect x="99.7718%" y="341" width="0.0571%" height="15" fill="rgb(231,100,33)" fg:x="10492" fg:w="6"/><text x="100.0218%" y="351.50"></text></g><g><title>aoc_2021_rust_practice.exe`hashbrown::raw::sse2::Group::match_byte (6 samples, 0.06%)</title><rect x="99.7718%" y="325" width="0.0571%" height="15" fill="rgb(228,126,14)" fg:x="10492" fg:w="6"/><text x="100.0218%" y="335.50"></text></g><g><title>aoc_2021_rust_practice.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.06%)</title><rect x="99.7718%" y="309" width="0.0571%" height="15" fill="rgb(215,173,21)" fg:x="10492" fg:w="6"/><text x="100.0218%" y="319.50"></text></g><g><title>`0x7FFC8CA07B29 (2 samples, 0.02%)</title><rect x="99.8669%" y="517" width="0.0190%" height="15" fill="rgb(210,6,40)" fg:x="10502" fg:w="2"/><text x="100.1169%" y="527.50"></text></g><g><title>`0x7FFC8CA0FB31 (4 samples, 0.04%)</title><rect x="99.8574%" y="581" width="0.0380%" height="15" fill="rgb(212,48,18)" fg:x="10501" fg:w="4"/><text x="100.1074%" y="591.50"></text></g><g><title>`0x7FFC8CA5B33D (4 samples, 0.04%)</title><rect x="99.8574%" y="565" width="0.0380%" height="15" fill="rgb(230,214,11)" fg:x="10501" fg:w="4"/><text x="100.1074%" y="575.50"></text></g><g><title>`0x7FFC8CA04479 (4 samples, 0.04%)</title><rect x="99.8574%" y="549" width="0.0380%" height="15" fill="rgb(254,105,39)" fg:x="10501" fg:w="4"/><text x="100.1074%" y="559.50"></text></g><g><title>`0x7FFC8CA04C14 (3 samples, 0.03%)</title><rect x="99.8669%" y="533" width="0.0285%" height="15" fill="rgb(245,158,5)" fg:x="10502" fg:w="3"/><text x="100.1169%" y="543.50"></text></g><g><title>`0x7FFC8CAC39AC (6 samples, 0.06%)</title><rect x="99.8574%" y="629" width="0.0571%" height="15" fill="rgb(249,208,11)" fg:x="10501" fg:w="6"/><text x="100.1074%" y="639.50"></text></g><g><title>`0x7FFC8CA06AF4 (6 samples, 0.06%)</title><rect x="99.8574%" y="613" width="0.0571%" height="15" fill="rgb(210,39,28)" fg:x="10501" fg:w="6"/><text x="100.1074%" y="623.50"></text></g><g><title>`0x7FFC8CA073E4 (6 samples, 0.06%)</title><rect x="99.8574%" y="597" width="0.0571%" height="15" fill="rgb(211,56,53)" fg:x="10501" fg:w="6"/><text x="100.1074%" y="607.50"></text></g><g><title>`0x7FFC8CAC3D4B (4 samples, 0.04%)</title><rect x="99.9334%" y="629" width="0.0380%" height="15" fill="rgb(226,201,30)" fg:x="10509" fg:w="4"/><text x="100.1834%" y="639.50"></text></g><g><title>`0x7FFC8CA07B29 (4 samples, 0.04%)</title><rect x="99.9334%" y="613" width="0.0380%" height="15" fill="rgb(239,101,34)" fg:x="10509" fg:w="4"/><text x="100.1834%" y="623.50"></text></g><g><title>`0x7FFC8CA088A8 (4 samples, 0.04%)</title><rect x="99.9334%" y="597" width="0.0380%" height="15" fill="rgb(226,209,5)" fg:x="10509" fg:w="4"/><text x="100.1834%" y="607.50"></text></g><g><title>`0x7FFC8CA04479 (4 samples, 0.04%)</title><rect x="99.9334%" y="581" width="0.0380%" height="15" fill="rgb(250,105,47)" fg:x="10509" fg:w="4"/><text x="100.1834%" y="591.50"></text></g><g><title>`0x7FFC8CA04C14 (3 samples, 0.03%)</title><rect x="99.9429%" y="565" width="0.0285%" height="15" fill="rgb(230,72,3)" fg:x="10510" fg:w="3"/><text x="100.1929%" y="575.50"></text></g><g><title>`0x7FFC8CA07B29 (3 samples, 0.03%)</title><rect x="99.9429%" y="549" width="0.0285%" height="15" fill="rgb(232,218,39)" fg:x="10510" fg:w="3"/><text x="100.1929%" y="559.50"></text></g><g><title>`0x7FFC8CA088A8 (3 samples, 0.03%)</title><rect x="99.9429%" y="533" width="0.0285%" height="15" fill="rgb(248,166,6)" fg:x="10510" fg:w="3"/><text x="100.1929%" y="543.50"></text></g><g><title>`0x7FFC8CA04479 (3 samples, 0.03%)</title><rect x="99.9429%" y="517" width="0.0285%" height="15" fill="rgb(247,89,20)" fg:x="10510" fg:w="3"/><text x="100.1929%" y="527.50"></text></g><g><title>`0x7FFC8CA5C0DA (2 samples, 0.02%)</title><rect x="99.9715%" y="597" width="0.0190%" height="15" fill="rgb(248,130,54)" fg:x="10513" fg:w="2"/><text x="100.2215%" y="607.50"></text></g><g><title>`0x7FFC8CA5C347 (2 samples, 0.02%)</title><rect x="99.9715%" y="581" width="0.0190%" height="15" fill="rgb(234,196,4)" fg:x="10513" fg:w="2"/><text x="100.2215%" y="591.50"></text></g><g><title>`0x7FFC8CA09A1D (2 samples, 0.02%)</title><rect x="99.9715%" y="565" width="0.0190%" height="15" fill="rgb(250,143,31)" fg:x="10513" fg:w="2"/><text x="100.2215%" y="575.50"></text></g><g><title>all (10,516 samples, 100%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(211,110,34)" fg:x="0" fg:w="10516"/><text x="0.2500%" y="703.50"></text></g><g><title>`0x7FFC8CA64C6E (18 samples, 0.17%)</title><rect x="99.8288%" y="677" width="0.1712%" height="15" fill="rgb(215,124,48)" fg:x="10498" fg:w="18"/><text x="100.0788%" y="687.50"></text></g><g><title>`0x7FFC8CA64CC3 (17 samples, 0.16%)</title><rect x="99.8383%" y="661" width="0.1617%" height="15" fill="rgb(216,46,13)" fg:x="10499" fg:w="17"/><text x="100.0883%" y="671.50"></text></g><g><title>`0x7FFC8CA64E3B (17 samples, 0.16%)</title><rect x="99.8383%" y="645" width="0.1617%" height="15" fill="rgb(205,184,25)" fg:x="10499" fg:w="17"/><text x="100.0883%" y="655.50"></text></g><g><title>`0x7FFC8CAC3E90 (3 samples, 0.03%)</title><rect x="99.9715%" y="629" width="0.0285%" height="15" fill="rgb(228,1,10)" fg:x="10513" fg:w="3"/><text x="100.2215%" y="639.50"></text></g><g><title>`0x7FFC8CA5C160 (3 samples, 0.03%)</title><rect x="99.9715%" y="613" width="0.0285%" height="15" fill="rgb(213,116,27)" fg:x="10513" fg:w="3"/><text x="100.2215%" y="623.50"></text></g></svg></svg>